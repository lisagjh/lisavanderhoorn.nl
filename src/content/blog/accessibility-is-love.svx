---

---
# Accessibility means love for others

Accessibility isn’t just a box to tick — it’s a legal _and_ moral necessity.  
With laws like the European Accessibility Act rolling out, it's time to go deeper.  
Instead of asking “why is it important?”, ask yourself:  
**“Why would you _choose_ to exclude people?”**


## What does accessibility on the web mean?

Accessibility often makes people think of people with disabilities or people who are less able bodied. It's much more, much broader than that. Web accessibility is also important for you and me, for your grandma with Parkinsons', for your neighbour with a broken arm, your friend with a clingy toddler, your uncle with an old device and bad internet.

Accessibility also means respecting common expectation patterns, which is often just good design.  
Users expect to close a modal with the Escape key or by clicking outside of it.  
Not supporting these basic interactions isn’t just frustrating, it creates unnecessary barriers.

Accessibility means building websites that everyone can use, regardless of ability, situation or device.

## Why is it important to me?

> As someone who only started learning about frontend development two years ago, accessibility has been important to me from the very beginning.

During my Frontend Development education at UAUS, accessibility wasn’t just a topic mentioned in passing, it was a core theme. To me it is one of the core principles off the web. Our teachers also made sure we didn't just hear it from them, but also from people in the field.

One speaker I still remember vividly was **Ischa Gast**, Head of Accessibility (?) at Schiphol. He showed us a ramp designed for a public building. On paper it looked accessible, but in reality, it was nearly impossible to use. It was a great reminder that good intentions don’t always equal good outcomes.

At one point, he said something that stuck with me:

> **"Accessibility is love for others."**

That line hit hard. Because it’s true. Making a website accessible means you’re choosing _not_ to exclude. Ischa also asked us bluntly:

> “**Why would you knowingly prevent someone from using your website?**”

Since then, I’ve kept that mindset in every project I build. Not just because it’s the right thing to do, but because building for _everyone_ should be the default.

## Where do you start?

You start by testing and analysing. Experiencing the annoyances. You can do this very easily; tape a piece of paper over your touchpad or unplug your mouse. You can also put a plastic thingy over your screen. Now that that's done, try and navigate a website, your own or whichever one you feel like. Try to do a search, or order something from your favourite brand. More likely than not, you will run into problems. 

Once you have found an issue, like a button not being reachable with keyboard navigation, you can look deeper to find what's causing the problem. You can use tools like DevTools, WAVE, W3C HTML Validator, or Lighthouse, to give you a deeper look into this.

Now that we have taken a look at keyboard navigation, we should get into screenreaders. Personally, I find these harder. 

### What now?

Once you have identified the issues, you can find a solution to them. With keyboard navigation it can be as simple as non-semantic HTML, a`<span>` or `<div>` with an `eventListener`, instead of a good ol' `<button>`.

In general it's best to stick to these few base rules:

1. If it doesn't have text, it needs an `alt` or `aria-label`. 
2. Make sure headings follow a logical order, from `h1` to `h6`
3. Use semantic HTML: use `<nav>`, `<button>`, `<label>`.
4. Ensure proper focus management: users should know where they are and what happened



Accessibility isn’t hard, it just needs some attention. You need to incorporate it into your workflow, not do it as a last minute fix. And most importantly: try it yourself. Break your website. Ask others to try it out. Get them to speak out loud while doing this, get into their mind, find the points where they struggle, and figure out how to fix it.

> Accessibility is about empathy, design, and responsibility  
> and most of all, about making the web a better place for everyone.

#### Want to learn more?

Great! These are some of the tools and resources that helped me learn about accessibility, WCAG and ARIA:

- [WAVE Evaluation Tool](https://wave.webaim.org/)
- [WCAG Quick Reference](https://www.w3.org/WAI/WCAG21/quickref/)
- [MDN Web Docs: Accessibility](https://developer.mozilla.org/en-US/docs/Web/Accessibility)
- [Deque University](https://dequeuniversity.com/)
- [WebAIM's Introduction to ARIA](https://webaim.org/techniques/aria/)
- [VoiceOver Getting Started](https://support.apple.com/en-us/HT201775)

