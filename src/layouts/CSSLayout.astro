---
import ClientRouter from "astro/components/ClientRouter.astro";
import BaseLayout from "./BaseLayout.astro";
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import { date } from "astro:schema";

const { frontmatter } = Astro.props;

// Fetch all posts
const allPosts = await getCollection("blog");

const relatedPostsData = allPosts
  .filter(
    (post) =>
      Array.isArray(frontmatter.relatedPosts) &&
      frontmatter.relatedPosts.includes(post.id) &&
      post.data.tags?.includes("cssday")
  )
  .map((post) => ({
    title: post.data.title,
    slug: post.id,
    description: post.data.description,
    date: new Date(post.data.pubDate).toLocaleDateString("nl-NL", {
      year: "numeric",
      month: "2-digit",
      day: "2-digit",
    }),
    image: post.data.image,
  }));

console.log(relatedPostsData);
---

<ClientRouter />
<BaseLayout pageTitle={`${frontmatter.title}`}>
  <section class="markdown-post" transition:name={`post-${frontmatter.id}`}>
    <button class="back" onclick="history.back()">Go Back</button>

    <h1 transition:name={`title-${frontmatter.id}`}>{frontmatter.title}</h1>

    {frontmatter.date ? <p class="date">{frontmatter.date}</p> : null}

    {
      frontmatter.liveiste ? (
        <a href={frontmatter.livesite}>View this project here</a>
      ) : null
    }

    {
      frontmatter.image && (
        <Image
          src={frontmatter.image.url}
          width="300"
          height="200"
          alt={frontmatter.image.alt}
        />
      )
    }

    <slot />

    {
      frontmatter.notes ? (
        <div class="notes">
          <svg
            width="23"
            height="119"
            viewBox="0 0 23 119"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M20.6863 8.5C20.6863 3.79844 16.5812 0 11.5 0C6.41882 0 2.31369 3.79844 2.31369 8.5V76.5C2.31369 81.2016 6.41882 85 11.5 85C16.5812 85 20.6863 81.2016 20.6863 76.5V8.5ZM11.5 119C20.3396 119 25.8643 110.146 21.4444 103.062C19.3933 99.7752 15.6025 97.75 11.5 97.75C2.66043 97.75 -2.86427 106.604 1.55561 113.687C3.60674 116.975 7.39753 119 11.5 119Z"
              fill="black"
            />
          </svg>

          <p>{frontmatter.notes}</p>
        </div>
      ) : null
    }

    {
      relatedPostsData.length > 0 && (
        <div class="related-posts">
          <h4>Related posts</h4>
          <ul>
            {relatedPostsData.map((post) => (
              <li>
                <a href={`/cssday/${post.slug}`}>
                  {post.image.url && (
                    <Image
                      src={post.image.url}
                      width="100"
                      height="70"
                      alt={post.image.alt}
                    />
                  )}
                  <div class="content">
                    <h5>{post.title}</h5>
                    <p>{post.description}</p>
                  </div>
                </a>
              </li>
            ))}
          </ul>
        </div>
      )
    }
  </section>
</BaseLayout>

<style>
  section {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    padding: 2rem;
    width: 100%;
    max-width: 65rem;
  }

  img {
    height: 100%;
    min-height: 8rem;
    max-height: 25rem;
    object-fit: cover;
  }

  .date {
    font-size: 1rem;
    color: #313131;
  }

  h2 {
    font-size: 3.25rem;
  }

  h3 {
    font-size: 2.5rem;
  }

  h4 {
    font-size: 1.4rem;
  }

  @media (width <= 26rem) {
    h2 {
      font-size: 2.75rem;
    }

    h3 {
      font-size: 2rem;
    }

    h4 {
      font-size: 1.2rem;
    }
  }

  .notes {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    gap: 1.5rem;
    padding: 1rem 1.5rem;
    width: 75vw;
    max-width: 26rem;
    background-color: var(--primary-light);
    border-radius: 1vmin;
    border: 3px solid var(--white);
    box-shadow: 0 0 0px 2px var(--primary);
  }

  .notes p {
    font-size: 1rem;
  }

  .notes svg {
    min-height: 100%;
  }

  .notes svg path {
    fill: var(--primary);
  }

  .related-posts {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    width: 100%;
    padding: 2rem 1rem;
    border-radius: 0.1rem;
    overflow: hidden;
    border-radius: 0.5vmin;
  }

  .related-posts ul {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: 1.5rem;
    width: 100%;
  }

  .related-posts li {
    display: flex;
    min-width: 14rem;
    width: fit-content;
    max-width: 28rem;
    min-height: 14rem;
    box-shadow:
      0px 13px 25px 0px rgba(0, 0, 0, 0.01),
      0px 4px 9px 0px rgba(0, 0, 0, 0.1);
  }

  .related-posts li a {
    display: flex;
    flex-direction: row;
    gap: 0.5rem;
    text-decoration: none;
    height: 100%;
    width: 100%;
    overflow: hidden;

    img {
      width: 100%;
      max-width: 12rem;
      height: 100%;
    }
  }

  .content {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    padding: 1rem;
  }

  /* markdown styling */
  :global(.markdown-post pre) {
    max-width: 100%;
  }

  :global(
      .markdown-post h2,
      .markdown-post h3,
      .markdown-post h4,
      .markdown-post h5,
      .markdown-post h6
    ) {
    font-family: var(--body-font);
  }

  :global(.markdown-post h1) {
    font-size: calc(1rem * 1vw);
    letter-spacing: 1px;
    line-height: 0.97;
  }

  :global(.markdown-post h2) {
    font-size: 2rem;
  }

  :global(.markdown-post h3) {
    font-size: 1.75rem;
  }

  :global(.markdown-post h4) {
    font-size: 1.5rem;
  }

  :global(.markdown-post h5) {
    font-size: 1.25rem;
  }
</style>
