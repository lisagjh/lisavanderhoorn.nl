<script>
  import { gsap } from "gsap";
  import ScrambleTextPlugin from "gsap/ScrambleTextPlugin";

  gsap.registerPlugin(ScrambleTextPlugin);

  const tl = gsap.timeline();

  gsap.set("h1 span", { visibility: "visible", opacity: 0 });

  document
    .querySelectorAll("h1 span")
    ?.forEach((span) => span.classList.add("hidden"));

  tl.fromTo(
    "h1 span.greeting",
    { opacity: 0, y: -20 },
    { opacity: 1, y: 0, duration: 0.25, ease: "sine.inOut" }
  )
    .to("h1 span.name", {
      opacity: 1,
      y: 0,
      duration: 0.25,
      ease: "sine.inOut",
    })
    .to("h1 span.name", {
      opacity: 0,
      scale: 0.95,
      y: 20,
      duration: 0.25,
      ease: "sine.inOut",
      delay: 2.5,
    })
    .fromTo(
      "h1 span.frontend",
      { opacity: 0, scale: 0.85, y: -20 },
      { opacity: 1, scale: 1, y: 0, duration: 0.25, ease: "sine.inOut" }
    )
    .fromTo(
      "h1 span.frontend span.word",
      { opacity: 0, scale: 0.95, y: -20 },
      {
        opacity: 1,
        scale: 1,
        y: 0,
        duration: 0.25,
        ease: "sine.inOut",
        delay: -2.5,
      }
    )
    .to("h1 span.word", {
      opacity: 1,
      scrambleText: "nerd",
      duration: 0.5,
      ease: "sine.inOut",
      delay: 2.5,
    })
    .to("h1 span.frontend", {
      opacity: 0,
      scale: 0.95,
      y: 100,
      duration: 0.25,
      ease: "sine.inOut",
    })
    .fromTo(
      "h1 span.name",
      {
        scale: 0.95,
        y: 20,
      },
      {
        opacity: 1,
        scale: 1,
        duration: 0.25,
        y: 0,
        ease: "sine.inOut",
        delay: 0.35,
        immediateRender: false,
      }
    );
</script>

<section class="intro">
  <h1>
    <span class="greeting">Hi! I'm</span>
    <div class="name-container">
      <span class="name">Lisa van der Hoorn</span>
      <span class="frontend">
        a frontend <span class="word">developer</span>
      </span>
    </div>
  </h1>
</section>

<style>
  h1 span.hidden {
    animation: none;
    visibility: hidden;
    opacity: 0;
  }

  h1 span {
    visibility: hidden;
    opacity: 0;
    animation: show-span 0.15s ease-in-out forwards;
  }

  div.name-container {
    position: relative;
    display: inline-block;
  }

  div.name-container:has(span.name) span.frontend,
  div.name-container:has(span.name) span.name {
    position: absolute;
    top: 0;
    left: 0;
    whitespace: nowrap;
  }

  div.name-container:has(span.name):not(:has(span.name.hidden)) span.frontend {
    visibility: hidden;
    opacity: 0;
    animation: none;
  }

  @keyframes show-span {
    to {
      opacity: 1;
      visibility: visible;
    }
  }

  section.intro {
    display: flex;
    flex-direction: column;
    justify-content: center;
    gap: 1rem;
    padding: 0 4rem;
    width: 90%;
    max-width: 65rem;
    height: 73vh;
    animation: show 0.15s ease-in-out forwards;
  }

  @keyframes show {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  h1 {
    color: var(--primary);
    line-height: 1;
    display: block;
    overflow: visible;
  }

  h1 {
    font-size: 1.5rem;
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;

    & span {
      line-height: 1;
    }
  }

  h1 span.name,
  h1 span.frontend {
    font-size: 2.2rem;
  }

  h1 span.greeting {
    font-family: var(--body-font);
    font-style: italic;
    font-size: 1.75rem;
  }

  @media (width >= 38rem) {
    h1 {
      font-size: 2.5rem;
    }

    h1 span.name,
    h1 span.frontend {
      font-size: 3.5rem;
    }
  }

  @supports (animation-timeline: view()) {
    section.intro {
      animation-timeline: view();
      animation-name: scale-out;
      animation-fill-mode: forwards;
      animation-range: 60% 100%;
    }

    @keyframes scale-out {
      from {
        scale: 1;
        opacity: 1;
        transform: translateY(0);
      }
      to {
        scale: 0.85;
        opacity: 0;
        transform: translateY(75%);
      }
    }
  }
</style>
