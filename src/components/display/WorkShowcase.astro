---
import Post from "./BlogPost.astro";
import { getCollection } from "astro:content";
const projects = await getCollection("projects");
const allProjects = projects.sort((a, b) => b.data.id - a.data.id);
---

<section id="work">
  <div class="wrapper">
    <h2 class="pill">Work</h2>
    <p>{allProjects.length} projects</p>
    <p>Check out some projects I've worked on.</p>
  </div>
  <ul class="grid">
    {
      allProjects.map((project, index) => (
        <li class={index % 2 !== 0 ? "odd" : "even"} data-index={index}>
          <a href={`/posts/${project.id}`}>
            <img
              src={project.data.image.url}
              alt={project.data.image.alt}
              loading="lazy"
              width="180"
            />
            <h3>{project.data.title}</h3>
            <p>{project.data.description}</p>
          </a>
        </li>
      ))
    }
  </ul>
  <div class="wrapper">
    <!-- <a href="/" class="pill">More </a> -->
  </div>
</section>

<style>
  .hidden {
    visibility: hidden;
  }

  .show {
    visibility: visible;
  }

  section {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    padding: 2rem;
    width: 100%;
    max-width: 65rem;
  }

  .wrapper {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    padding: 2rem;
    align-items: center;
    background-color: var(--tertiary-light);
    border-radius: 10px;
  }

  .wrapper:first-of-type {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
  }

  .wrapper:first-of-type p:first-of-type {
    background-color: var(--tertiary);
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 20px;
    height: 2.5rem;
    padding: 1rem;
    justify-self: end;
    align-self: center;
  }

  .wrapper:first-of-type p:last-of-type {
    grid-column: 1/3;
  }

  ul.grid {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  @media (width >= 37rem) {
    ul.grid {
      display: grid;
      grid-template-columns: repeat(5, 1fr);
      gap: 1rem;
    }

    ul.grid li:nth-of-type(3n + 1) {
      grid-column: 1/3;
    }

    ul.grid li:nth-of-type(3n + 2) {
      grid-column: 3 / 6;
    }

    ul.grid li:nth-of-type(3n + 3) {
      grid-column: 1 / 4;
    }

    ul.grid li:nth-of-type(3n + 4) {
      grid-column: 4/6;
    }

    ul.grid li:nth-of-type(5) {
      grid-column: 1/6;

      a {
        display: grid;
        grid-template-areas: "image title" "image description";

        & img {
          grid-area: image;
        }

        & h3 {
          align-self: flex-end;
        }

        & p {
          align-self: flex-start;
        }
      }
    }


  }

  li {
    background-color: var(--white);
    border-radius: 12px;
    box-shadow:
      0px 8px 13px 0px rgba(0, 0, 0, 0.03),
      0px 12px 11px 0px rgba(0, 0, 0, 0.02),
      0px 8px 8px 0px rgba(0, 0, 0, 0.03),
      0px -3px 4px 0px rgba(0, 0, 0, 0.03);
    list-style: "";
  }

  li a {
    height: 100%;
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: start;
    gap: 1rem;
    padding: 2rem;
    text-decoration: none;
  }

  li h3 {
    font-family: var(--body-font);
    font-size: 1.35rem;
  }

  li p {
    max-width: 30ch;
    letter-spacing: -0.25px;
  }

  .wrapper:has(a) {
    align-items: end;
  }

  ul li.even {
    --delay: calc((sibling-index() + 1) * 0.25s);
    animation: fade-slide-in 0.75s var(--delay)
      cubic-bezier(0.175, 0.885, 0.32, 1.275) both;
  }

  ul li.odd {
    --delay: calc((sibling-index() + 1) * 0.25s);
    animation: fade-slide-in-odd 0.75s var(--delay)
      cubic-bezier(0.175, 0.885, 0.32, 1.275) both;
  }

  @keyframes fade-slide-in {
    from {
      opacity: 0;
      transform: translateX(-5rem);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes fade-slide-in-odd {
    from {
      opacity: 0;
      transform: translateX(5rem);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @supports (animation-timeline: view()) {
    section {
      animation-timeline: view();
      animation-name: fade-in;
      animation-duration: 1s;
      animation-fill-mode: forwards;
      animation-range: 0% 30%;
    }

    @keyframes fade-in {
      from {
        transform: translateY(10rem);
        opacity: 0;
      }
      to {
        transform: translateY(0);
        opacity: 1;
      }
    }
  }
</style>
