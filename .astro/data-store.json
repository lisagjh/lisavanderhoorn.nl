[["Map",1,2,9,10,99,100],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.4.3","content-config-digest","88d1b8fdc2b37625","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://lisavanderhoorn.nl/\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":\"shiki\",\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false,\"serializeConfig\":false},\"legacy\":{\"collections\":false}}","projects",["Map",11,12,26,45,27,72],"dda-scroll",{"id":11,"data":13,"body":31,"filePath":32,"digest":33,"rendered":34},{"id":14,"title":15,"date":16,"description":17,"image":18,"tags":21,"relatedPosts":25,"livesite":28,"notes":29,"lang":30},2,"DDA - 3D Scroll Animation","November 2024","Creative Spike focused on using your creativitiy to create a scroll driven animation.",{"url":19,"alt":20},"/work-showcase/dda-scroll.webp","Mockup of my creative spike focused on implementing scroll driven animations in the Dutch Digital Agencies website,",[22,23,24],"Sveltekit","FDND","ThreeJS",[26,27],"dda","dda-viewtransitions","https://spike-one-lisa.vercel.app/","This project uses an API that is still being used and worked on/with by other students. This means that this project may not work anymore.","en","At FDND, we had a special sprint where we got to let our creativity run free and build fun stuff, letting go of the styleguide of our client. Each week, we got a new random prompt focused on a new-ish technology.\n\nThis week we focused on scroll driven animations. My prompt was \u003Cem>Sad Acid Graphics Scroll Driven Animations\u003C/em>.\n\nI had already done CSS scroll driven animations plenty of times, so I decided to do something different. I began by researching the vibe of the prompt, by looking at images that represented this style. I found inspiration in wireframe shapes, grids, and black-and-white colors with bold, bright accents.\n\nAfter sketching a rough concept, I dove right into building. I chose Three.js to create a rotating wireframe donut. I had dabbled in Three.js earlier in the year, so I could reuse much of that knowledge. Once the shape was in place, I fine-tuned the animation. My first attempt was too fast and not smooth enough, so I added easing to give it a more fluid feel.\n\nI spent a lot of time tweaking the animation, experimenting with different speeds and effects, and even more time searching for the perfect font. After many hours of refining, I settled on a bold font and finalized the design.\n\nThe result was a scroll-driven animation with a rotating 3D object that embodied the gritty, acid-inspired aesthetic of the prompt. The challenge of optimizing performance, especially with Three.js, was rewarding, and it was a great opportunity to experiment with something outside of my usual design scope.\n\nI still love this project. It was a fun break from routine, a chance to push my skills, and a reminder of how endless the possibilities are with coding! It also inspired me to add something like this to my own website - hence the `three.js` shape on the home page.","src/content/projects/DDA-scroll.md","e5708b41c15b1e69",{"html":35,"metadata":36},"\u003Cp>At FDND, we had a special sprint where we got to let our creativity run free and build fun stuff, letting go of the styleguide of our client. Each week, we got a new random prompt focused on a new-ish technology.\u003C/p>\n\u003Cp>This week we focused on scroll driven animations. My prompt was \u003Cem>Sad Acid Graphics Scroll Driven Animations\u003C/em>.\u003C/p>\n\u003Cp>I had already done CSS scroll driven animations plenty of times, so I decided to do something different. I began by researching the vibe of the prompt, by looking at images that represented this style. I found inspiration in wireframe shapes, grids, and black-and-white colors with bold, bright accents.\u003C/p>\n\u003Cp>After sketching a rough concept, I dove right into building. I chose Three.js to create a rotating wireframe donut. I had dabbled in Three.js earlier in the year, so I could reuse much of that knowledge. Once the shape was in place, I fine-tuned the animation. My first attempt was too fast and not smooth enough, so I added easing to give it a more fluid feel.\u003C/p>\n\u003Cp>I spent a lot of time tweaking the animation, experimenting with different speeds and effects, and even more time searching for the perfect font. After many hours of refining, I settled on a bold font and finalized the design.\u003C/p>\n\u003Cp>The result was a scroll-driven animation with a rotating 3D object that embodied the gritty, acid-inspired aesthetic of the prompt. The challenge of optimizing performance, especially with Three.js, was rewarding, and it was a great opportunity to experiment with something outside of my usual design scope.\u003C/p>\n\u003Cp>I still love this project. It was a fun break from routine, a chance to push my skills, and a reminder of how endless the possibilities are with coding! It also inspired me to add something like this to my own website - hence the \u003Ccode>three.js\u003C/code> shape on the home page.\u003C/p>",{"headings":37,"localImagePaths":38,"remoteImagePaths":39,"frontmatter":40,"imagePaths":44},[],[],[],{"id":14,"title":15,"date":16,"livesite":28,"description":17,"image":41,"notes":29,"tags":42,"relatedPosts":43,"lang":30},{"url":19,"alt":20},[22,23,24],[26,27],[],{"id":26,"data":46,"body":57,"filePath":58,"digest":59,"rendered":60},{"id":47,"title":48,"date":49,"description":50,"image":51,"tags":54,"relatedPosts":55,"livesite":56,"notes":29,"lang":30},1,"Dutch Digital Agencies","September 2024 - januari 2025","Redesign the DDA website - the dutch bond of digital agencies",{"url":52,"alt":53},"/work-showcase/dda-original.webp","Mockup of my project, the Dutch Digital Agencies website.",[22,23],[11,27],"https://dutchdigitalagencies.vercel.app/","During my final year at FDND, I worked on this project with two classmates. It was a collaboration with \u003Ca href=\"https://www.voorhoede.nl/nl/\">De Voorhoede\u003C/a>, who developed the actual new website for \u003Ca href=\"https://dutchdigitalagencies.com/\">Dutch Digital Agencies\u003C/a>. We had the chance to work directly with their team lead, Declan—an expert in his field. Each sprint review, he gave us valuable feedback, which really helped me grow as a developer.\n\nDeclan encouraged us to make some creative decisions of our own to improve the design, and I definitely took that opportunity. You can compare our version with the official one and see the differences—especially in the menu and the banner carousel on the homepage.\n\nOne of the biggest challenges was designing the banner carousel in a way that all logos would look good. Honestly, I still prefer our version over the real one, since some logos in the official design are barely visible.\n\nFor the menu, I chose to move it into a sidebar rather than keeping it in the header. In the original design, they kind of cheated by using a super small font-size (around 12px), which I wasn’t a fan of. I believe accessibility and readability come first, so I looked for a better solution.\n\nAlong with the sidebar, I added a `view-transition` on the active state to make axtive state animation smoother. I also implemented scroll-driven animations on the homepage for a more dynamic experience.\n\nThe project was built using SvelteKit, shortly after the release of Svelte 5. At the time, we were just starting to learn how to work with JavaScript frameworks—so jumping straight into the newest version of Svelte was both exciting and a little overwhelming. It meant a steep learning curve, a lot of trial and error, and frequent refactoring as we learned better ways to structure and write our code.\n\nThat said, it also gave us a great opportunity to dive into some of the latest features right away. We quickly started working with the new \"Runes Mode\", using `$state` and `$derived`, combined with things like `$effect()`. Looking back, it was quite challenging, but also super rewarding. I came out of it with more developed skills in problem solving and learning new skills.","src/content/projects/DDA.md","9a1477b70a5cc3f2",{"html":61,"metadata":62},"\u003Cp>During my final year at FDND, I worked on this project with two classmates. It was a collaboration with \u003Ca href=\"https://www.voorhoede.nl/nl/\">De Voorhoede\u003C/a>, who developed the actual new website for \u003Ca href=\"https://dutchdigitalagencies.com/\">Dutch Digital Agencies\u003C/a>. We had the chance to work directly with their team lead, Declan—an expert in his field. Each sprint review, he gave us valuable feedback, which really helped me grow as a developer.\u003C/p>\n\u003Cp>Declan encouraged us to make some creative decisions of our own to improve the design, and I definitely took that opportunity. You can compare our version with the official one and see the differences—especially in the menu and the banner carousel on the homepage.\u003C/p>\n\u003Cp>One of the biggest challenges was designing the banner carousel in a way that all logos would look good. Honestly, I still prefer our version over the real one, since some logos in the official design are barely visible.\u003C/p>\n\u003Cp>For the menu, I chose to move it into a sidebar rather than keeping it in the header. In the original design, they kind of cheated by using a super small font-size (around 12px), which I wasn’t a fan of. I believe accessibility and readability come first, so I looked for a better solution.\u003C/p>\n\u003Cp>Along with the sidebar, I added a \u003Ccode>view-transition\u003C/code> on the active state to make axtive state animation smoother. I also implemented scroll-driven animations on the homepage for a more dynamic experience.\u003C/p>\n\u003Cp>The project was built using SvelteKit, shortly after the release of Svelte 5. At the time, we were just starting to learn how to work with JavaScript frameworks—so jumping straight into the newest version of Svelte was both exciting and a little overwhelming. It meant a steep learning curve, a lot of trial and error, and frequent refactoring as we learned better ways to structure and write our code.\u003C/p>\n\u003Cp>That said, it also gave us a great opportunity to dive into some of the latest features right away. We quickly started working with the new “Runes Mode”, using \u003Ccode>$state\u003C/code> and \u003Ccode>$derived\u003C/code>, combined with things like \u003Ccode>$effect()\u003C/code>. Looking back, it was quite challenging, but also super rewarding. I came out of it with more developed skills in problem solving and learning new skills.\u003C/p>",{"headings":63,"localImagePaths":64,"remoteImagePaths":65,"frontmatter":66,"imagePaths":71},[],[],[],{"id":47,"title":48,"livesite":56,"date":49,"description":50,"bodyText":67,"image":68,"notes":29,"tags":69,"relatedPosts":70,"lang":30},"Labore esse in aute ipsum sint eu veniam. Consectetur nostrud Lorem mollit est ad. Officia eiusmod ea minim esse id voluptate. Pariatur non labore elit voluptate minim enim. Laboris quis nisi dolor veniam mollit tempor ea quis aliqua cupidatat anim reprehenderit. Exercitation velit cupidatat Lorem nostrud adipisicing eiusmod ut aliqua id anim ullamco tempor excepteur ut.",{"url":52,"alt":53},[22,23],[11,27],[],{"id":27,"data":73,"body":85,"filePath":86,"digest":87,"rendered":88},{"id":74,"title":75,"date":16,"description":76,"image":77,"tags":80,"relatedPosts":83,"livesite":84,"notes":29,"lang":30},3,"DDA - View Transition","Creative Spike focused on using your creativitiy to create a view transition.",{"url":78,"alt":79},"/work-showcase/dda-view.webp","Mockup of my creative spike focused on implementing view transitions in the Dutch Digital Agencies website,",[22,23,81,82],"P5js","View transitions",[26,11],"https://user-needs-ivory.vercel.app/","At FDND we had a special sprint where we got to let our creativity run free, build fun stuff, and let go of the styleguide of our client. Each week we got a new random prompt, focused on a certain new(-ish) feature or technology.\n\nThis week my prompt was \u003Cem>Glitzy Brutalist View Transitions\u003C/em>. I loved this prompt, since I have always been interested in brutalism, and instantly had some cool ideas of how to implement this into this website.\n\nI started out analysing the prompt. I did end up kind of ignoring the glitzy part, leaning into brutalism. So what does brutalism mean? In architecture it's raw materials, visible structure, and no unnecessary decorations. When you look at brutalism in webdesign, it tends to be mostly black and white, with one or two colors as accent, simple fonts, often big headings, minimal to no decorative elements.\n\nSo how do I translate this to a view transition? I decided to go big and bold, and created an interactive screen with `P5.js` and the \u003Ca href=\"https://p5-svelte.netlify.app/\">svelte library\u003C/a>. On their website,I saw \u003Ca href=\"https://p5-svelte.netlify.app/examples/wavemaker\">this\u003C/a> example and was inspired to create something similar, but with the text \"DDA\" - Dutch Digital Agencies.\n\nBefore diving into that, I wanted to understand how view transitions actually worked. I started small, adding an animated active state indicator to the menu item using the `::before` pseudo-element. To my surprise, it was super straightforward:\n\n```css\n.active::before {\n  view-transition-name: active-link;\n}\n```\n\nThat one line already gave me a nice animation between active links—way easier than I expected, and a fun first win before tackling the more complex stuff.\n\n\nOnce I got the hang of basic transitions, I deciced to dive into the transition I had in mind. I turned the interactive graphic into a component, and imported it in the `Layout.svelte`. Here I used a boolean variable called `isTransitioning` to toggle it's visibility during page transitions. This component fades in when a transition is happening, and fades out when it's done. It sits on top of everything with `position: fixed`. \n\nI used a boolean variable called `isTransitioning` to toggle its visibility during page transitions. This component fades in while a transition is happening and fades out when it’s done. It sits on top of everything using position: fixed.\n\n```html\n\u003Cdiv class=\"bg\" class:show-transition={isTransitioning}>\n  \u003CGraphic />\n\u003C/div>\n```\n\nAs you can see, the `show-transition` class gets applied when `isTransitioning = true`.\n\n```css\ndiv.bg {\n  position: fixed;\n  width: 110vw;\n  height: 110vh;\n  opacity: 0;\n  pointer-events: none;\n  transition: opacity 0.5s ease;\n}\n\ndiv.bg.show-transition {\n  opacity: 1;\n  pointer-events: auto;\n}\n```\n\nFor the page transitions themselves, I used the ::view-transition-old(root) and ::view-transition-new(root) selectors to define slide-in/out animations:\n\n```css\n@keyframes slide-out {\n  from { transform: translateX(0); opacity: 1; }\n  to   { transform: translateX(-20%); opacity: 0; }\n}\n\n@keyframes slide-in {\n  from { transform: translateX(20%); opacity: 0; }\n  to   { transform: translateX(0); opacity: 1; }\n}\n```\n\nThese gave the whole page a nice, smooth transition that felt deliberate and \"designed\". It turned out way better than I expected! \nThis is still one of my favourite projects I made in school. Definitely gonna make a cool transition screen for this website using this method.","src/content/projects/DDA-viewtransitions.md","08bc0e4730994a0f",{"html":89,"metadata":90},"\u003Cp>At FDND we had a special sprint where we got to let our creativity run free, build fun stuff, and let go of the styleguide of our client. Each week we got a new random prompt, focused on a certain new(-ish) feature or technology.\u003C/p>\n\u003Cp>This week my prompt was \u003Cem>Glitzy Brutalist View Transitions\u003C/em>. I loved this prompt, since I have always been interested in brutalism, and instantly had some cool ideas of how to implement this into this website.\u003C/p>\n\u003Cp>I started out analysing the prompt. I did end up kind of ignoring the glitzy part, leaning into brutalism. So what does brutalism mean? In architecture it’s raw materials, visible structure, and no unnecessary decorations. When you look at brutalism in webdesign, it tends to be mostly black and white, with one or two colors as accent, simple fonts, often big headings, minimal to no decorative elements.\u003C/p>\n\u003Cp>So how do I translate this to a view transition? I decided to go big and bold, and created an interactive screen with \u003Ccode>P5.js\u003C/code> and the \u003Ca href=\"https://p5-svelte.netlify.app/\">svelte library\u003C/a>. On their website,I saw \u003Ca href=\"https://p5-svelte.netlify.app/examples/wavemaker\">this\u003C/a> example and was inspired to create something similar, but with the text “DDA” - Dutch Digital Agencies.\u003C/p>\n\u003Cp>Before diving into that, I wanted to understand how view transitions actually worked. I started small, adding an animated active state indicator to the menu item using the \u003Ccode>::before\u003C/code> pseudo-element. To my surprise, it was super straightforward:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"css\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">.active::before\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  view-transition-name\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: active-link;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>That one line already gave me a nice animation between active links—way easier than I expected, and a fun first win before tackling the more complex stuff.\u003C/p>\n\u003Cp>Once I got the hang of basic transitions, I deciced to dive into the transition I had in mind. I turned the interactive graphic into a component, and imported it in the \u003Ccode>Layout.svelte\u003C/code>. Here I used a boolean variable called \u003Ccode>isTransitioning\u003C/code> to toggle it’s visibility during page transitions. This component fades in when a transition is happening, and fades out when it’s done. It sits on top of everything with \u003Ccode>position: fixed\u003C/code>.\u003C/p>\n\u003Cp>I used a boolean variable called \u003Ccode>isTransitioning\u003C/code> to toggle its visibility during page transitions. This component fades in while a transition is happening and fades out when it’s done. It sits on top of everything using position: fixed.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"html\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#B392F0\"> class\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"bg\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> class:show-transition\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">{isTransitioning}\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  &#x3C;\u003C/span>\u003Cspan style=\"color:#FDAEB7;font-style:italic\">Graphic\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> />\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>As you can see, the \u003Ccode>show-transition\u003C/code> class gets applied when \u003Ccode>isTransitioning = true\u003C/code>.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"css\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#B392F0\">.bg\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  position\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">fixed\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  width\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">110\u003C/span>\u003Cspan style=\"color:#F97583\">vw\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  height\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">110\u003C/span>\u003Cspan style=\"color:#F97583\">vh\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  opacity\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  pointer-events\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">none\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  transition\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: opacity \u003C/span>\u003Cspan style=\"color:#79B8FF\">0.5\u003C/span>\u003Cspan style=\"color:#F97583\">s\u003C/span>\u003Cspan style=\"color:#79B8FF\"> ease\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#B392F0\">.bg.show-transition\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  opacity\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  pointer-events\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">auto\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>For the page transitions themselves, I used the ::view-transition-old(root) and ::view-transition-new(root) selectors to define slide-in/out animations:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"css\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">@keyframes\u003C/span>\u003Cspan style=\"color:#FFAB70\"> slide-out\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  from\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#79B8FF\">transform\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">translateX\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">); \u003C/span>\u003Cspan style=\"color:#79B8FF\">opacity\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  to\u003C/span>\u003Cspan style=\"color:#E1E4E8\">   { \u003C/span>\u003Cspan style=\"color:#79B8FF\">transform\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">translateX\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">-20\u003C/span>\u003Cspan style=\"color:#F97583\">%\u003C/span>\u003Cspan style=\"color:#E1E4E8\">); \u003C/span>\u003Cspan style=\"color:#79B8FF\">opacity\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">@keyframes\u003C/span>\u003Cspan style=\"color:#FFAB70\"> slide-in\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  from\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#79B8FF\">transform\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">translateX\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">20\u003C/span>\u003Cspan style=\"color:#F97583\">%\u003C/span>\u003Cspan style=\"color:#E1E4E8\">); \u003C/span>\u003Cspan style=\"color:#79B8FF\">opacity\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  to\u003C/span>\u003Cspan style=\"color:#E1E4E8\">   { \u003C/span>\u003Cspan style=\"color:#79B8FF\">transform\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">translateX\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">); \u003C/span>\u003Cspan style=\"color:#79B8FF\">opacity\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>These gave the whole page a nice, smooth transition that felt deliberate and “designed”. It turned out way better than I expected!\nThis is still one of my favourite projects I made in school. Definitely gonna make a cool transition screen for this website using this method.\u003C/p>",{"headings":91,"localImagePaths":92,"remoteImagePaths":93,"frontmatter":94,"imagePaths":98},[],[],[],{"id":74,"title":75,"date":16,"livesite":84,"description":76,"image":95,"notes":29,"tags":96,"relatedPosts":97,"lang":30},{"url":78,"alt":79},[22,23,81,82],[26,11],[],"blog",["Map",101,102,116,149,182,183,229,230,336,337,117,375],"css-sibling-count",{"id":101,"data":103,"body":119,"filePath":120,"digest":121,"rendered":122},{"id":104,"title":105,"pubDate":106,"description":107,"image":108,"tags":111,"relatedPosts":115,"lang":30,"note":118},4,"CSS sibling-count",["Date","2025-05-20T00:00:00.000Z"],"Exploring the new `sibling-count()` in CSS.",{"url":109,"alt":110},"/blog-content/siblingcount-demo.gif","Demo of the sticky header and nav with scroll-state",[112,113,114],"CSS","cssday","learning in public",[116,117],"scroll-state","css-carousels","This is a new feature and is only available in Chrome Canary 136+ at this time.","CSS just keeps getting better. `sibling-index()` makes staggering css animations easier than ever.\n\n## What is `sibling-index()`?\n\n`sibling-index()` is a new CSS function that returns the zero based index of an element, so the position it holds in it's list of siblings. This allows for a dynamic way to target and style elements based on their position, without any JS, hacky CSS `.first` classes or manual `--index` custom properties needed! 🎉 `sibling-index()` does this in a way more elegant way.\n\n## Use Case: Staggered Animations\n\nI have used `sibling-index()` to add a delay on the animations of my work showcase.\n\nOn each list item we calculate a custom delay, based on it's index in the list.\n\n```css\nli {\n  --delay: calc((sibling-index() + 1) * 0.25s);\n  animation: fade-slide-in 0.75s var(--delay) ease-in-out both;\n}\n```\n\n*Note: I'm still trying to figure out a way to delay this completely until it's in the viewport but its a struggle. WIP*\n\n## Use Case: Navigation Staggered Animation\n\nSeeing how easy this was, I figured I'd also implement it in my navigation, make that a little more fun.\n\nThis is all it needs. It's that easy.\n\n```css\nul li {\n  --delay: calc((sibling-index() - 1) * 0.1s);\n  animation: fade-slide-in 0.75s var(--delay) cubic-bezier(\n      0.175,\n      0.885,\n      0.32,\n      1.575\n    )\n    both;\n}\n\n@keyframes fade-slide-in {\n  from {\n    opacity: 0;\n    transform: translateY(-1rem);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n```\n\n## Other Uses\n\nOf course there are plenty other uses for this, other than staggering animations. You can use it to give each item a different color, using it to calculate a custom gradient, or even use it to make a custom cursor. It's a very versatile tool, and I'm sure it will be used in many different ways in the future. Excited to see what you come up with!\n\n## Support\n\nThis is a new feature and is only available in Chrome Canary 136+ at this time.","src/content/blog/css-sibling-count.md","f1e116c4d96e27fd",{"html":123,"metadata":124},"\u003Cp>CSS just keeps getting better. \u003Ccode>sibling-index()\u003C/code> makes staggering css animations easier than ever.\u003C/p>\n\u003Ch2 id=\"what-is-sibling-index\">What is \u003Ccode>sibling-index()\u003C/code>?\u003C/h2>\n\u003Cp>\u003Ccode>sibling-index()\u003C/code> is a new CSS function that returns the zero based index of an element, so the position it holds in it’s list of siblings. This allows for a dynamic way to target and style elements based on their position, without any JS, hacky CSS \u003Ccode>.first\u003C/code> classes or manual \u003Ccode>--index\u003C/code> custom properties needed! 🎉 \u003Ccode>sibling-index()\u003C/code> does this in a way more elegant way.\u003C/p>\n\u003Ch2 id=\"use-case-staggered-animations\">Use Case: Staggered Animations\u003C/h2>\n\u003Cp>I have used \u003Ccode>sibling-index()\u003C/code> to add a delay on the animations of my work showcase.\u003C/p>\n\u003Cp>On each list item we calculate a custom delay, based on it’s index in the list.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"css\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">li\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">  --delay\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">calc\u003C/span>\u003Cspan style=\"color:#E1E4E8\">((sibling-index() + \u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) * 0.25\u003C/span>\u003Cspan style=\"color:#79B8FF\">s\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  animation\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: fade-slide-in \u003C/span>\u003Cspan style=\"color:#79B8FF\">0.75\u003C/span>\u003Cspan style=\"color:#F97583\">s\u003C/span>\u003Cspan style=\"color:#79B8FF\"> var\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">--delay\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#79B8FF\">ease-in-out\u003C/span>\u003Cspan style=\"color:#79B8FF\"> both\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Cem>Note: I’m still trying to figure out a way to delay this completely until it’s in the viewport but its a struggle. WIP\u003C/em>\u003C/p>\n\u003Ch2 id=\"use-case-navigation-staggered-animation\">Use Case: Navigation Staggered Animation\u003C/h2>\n\u003Cp>Seeing how easy this was, I figured I’d also implement it in my navigation, make that a little more fun.\u003C/p>\n\u003Cp>This is all it needs. It’s that easy.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"css\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">ul\u003C/span>\u003Cspan style=\"color:#85E89D\"> li\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">  --delay\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">calc\u003C/span>\u003Cspan style=\"color:#E1E4E8\">((sibling-index() - \u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) * 0.1\u003C/span>\u003Cspan style=\"color:#79B8FF\">s\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  animation\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: fade-slide-in \u003C/span>\u003Cspan style=\"color:#79B8FF\">0.75\u003C/span>\u003Cspan style=\"color:#F97583\">s\u003C/span>\u003Cspan style=\"color:#79B8FF\"> var\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">--delay\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#79B8FF\">cubic-bezier\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">      0.175\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">      0.885\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">      0.32\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">      1.575\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    both\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">@keyframes\u003C/span>\u003Cspan style=\"color:#FFAB70\"> fade-slide-in\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  from\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    opacity\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    transform\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">translateY\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">-1\u003C/span>\u003Cspan style=\"color:#F97583\">rem\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  to\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    opacity\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    transform\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">translateY\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"other-uses\">Other Uses\u003C/h2>\n\u003Cp>Of course there are plenty other uses for this, other than staggering animations. You can use it to give each item a different color, using it to calculate a custom gradient, or even use it to make a custom cursor. It’s a very versatile tool, and I’m sure it will be used in many different ways in the future. Excited to see what you come up with!\u003C/p>\n\u003Ch2 id=\"support\">Support\u003C/h2>\n\u003Cp>This is a new feature and is only available in Chrome Canary 136+ at this time.\u003C/p>",{"headings":125,"localImagePaths":141,"remoteImagePaths":142,"frontmatter":143,"imagePaths":148},[126,129,132,135,138],{"depth":14,"slug":127,"text":128},"what-is-sibling-index","What is sibling-index()?",{"depth":14,"slug":130,"text":131},"use-case-staggered-animations","Use Case: Staggered Animations",{"depth":14,"slug":133,"text":134},"use-case-navigation-staggered-animation","Use Case: Navigation Staggered Animation",{"depth":14,"slug":136,"text":137},"other-uses","Other Uses",{"depth":14,"slug":139,"text":140},"support","Support",[],[],{"id":104,"title":105,"pubDate":144,"description":107,"image":145,"tags":146,"lang":30,"note":118,"relatedPosts":147},["Date","2025-05-20T00:00:00.000Z"],{"url":109,"alt":110},[112,113,114],[116,117],[],{"id":116,"data":150,"body":158,"filePath":159,"digest":160,"rendered":161},{"id":74,"title":151,"pubDate":152,"description":153,"image":154,"tags":156,"relatedPosts":157,"lang":30},"CSS scroll-state()",["Date","2025-05-15T00:00:00.000Z"],"Learning about CSS scroll-state",{"url":155,"alt":110},"/blog-content/demo-scroll-state.gif",[112,113,114],[101,117],"A while ago I read about CSS scroll-state. While building the new version of my website, I got to implement this new feature. This is an extension upon the container queries, to track the state of an element and figure out if it's scrolling or sticky somewhere. This allows us to add an animation or styling when an element is sticky at the top, like a `nav` for example.\n\n## Header and Nav\n\nI started out with a regular sticky header, which contains a nav element.\n\n```css\nheader {\n  position: sticky;\n  top: 0;\n}\n\nnav {\n  width: 100%;\n}\n```\n\nTo prevent issues on browsers that do not support this feature, I've wrapped the CSS for this in an `@supports` query.\n\n```css\n@supports (container-type: scroll-state) {\n  header {\n    container-type: scroll-state;\n    container-name: header;\n  }\n\n  nav {\n    width: 100%;\n    max-width: 65rem;\n    border-radius: 0;\n    box-shadow: 0 0px 2px rgba(0, 0, 0, 0.1);\n  }\n}\n```\n\nAnd then the part that makes the magic work: `@container scroll-state(stuck: top)`. This waits for the header to be stuck at the top of the page. Within this query I have added the different styling for the nav.\n\n```css\n@container scroll-state(stuck: top) {\n  nav {\n    background: linear-gradient(0deg, transparent 0%, var(--white) 90%);\n    border-radius: 0 0 12px 12px;\n    backdrop-filter: blur(1px);\n    -webkit-backdrop-filter: blur(5px);\n    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);\n  }\n}\n```\n\nThis was way easier than I expected it to be. The effect I have created is subtle, but I think it looks way better than before.\n\n### Full Code\n\nthats all.\n\n```css\nheader {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  justify-self: center;\n  position: sticky;\n  top: 0;\n  width: 90vw;\n  max-width: 75rem;\n  z-index: 50;\n}\n\nnav {\n  width: 100%;\n  max-width: 65rem;\n  background: linear-gradient(0deg, transparent 0%, var(--white) 90%);\n  border-radius: 0 0;\n  backdrop-filter: blur(1px);\n  -webkit-backdrop-filter: blur(5px);\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);\n}\n\n@supports (container-type: scroll-state) {\n  header {\n    container-type: scroll-state;\n    container-name: header;\n  }\n\n  nav {\n    width: 100%;\n    max-width: 65rem;\n    border-radius: 0;\n    box-shadow: 0 0px 2px rgba(0, 0, 0, 0.1);\n  }\n\n  @container scroll-state(stuck: top) {\n    nav {\n      background: linear-gradient(0deg, transparent 0%, var(--white) 90%);\n      border-radius: 0 0 12px 12px;\n      backdrop-filter: blur(1px);\n      -webkit-backdrop-filter: blur(5px);\n      box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);\n    }\n  }\n}\n```\n\n### Sources\n\n[CSS scroll-state() - chrome for developers](https://developer.chrome.com/blog/css-scroll-state-queries#progressive_enhancement)","src/content/blog/scroll-state.md","887dc103832273b2",{"html":162,"metadata":163},"\u003Cp>A while ago I read about CSS scroll-state. While building the new version of my website, I got to implement this new feature. This is an extension upon the container queries, to track the state of an element and figure out if it’s scrolling or sticky somewhere. This allows us to add an animation or styling when an element is sticky at the top, like a \u003Ccode>nav\u003C/code> for example.\u003C/p>\n\u003Ch2 id=\"header-and-nav\">Header and Nav\u003C/h2>\n\u003Cp>I started out with a regular sticky header, which contains a nav element.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"css\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">header\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  position\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">sticky\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  top\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">nav\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  width\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">100\u003C/span>\u003Cspan style=\"color:#F97583\">%\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>To prevent issues on browsers that do not support this feature, I’ve wrapped the CSS for this in an \u003Ccode>@supports\u003C/code> query.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"css\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">@supports\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#79B8FF\">container-type\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: scroll-state) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">  header\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    container-type\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: scroll-state;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    container-name\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: header;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">  nav\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    width\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">100\u003C/span>\u003Cspan style=\"color:#F97583\">%\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    max-width\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">65\u003C/span>\u003Cspan style=\"color:#F97583\">rem\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    border-radius\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    box-shadow\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#F97583\">px\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 2\u003C/span>\u003Cspan style=\"color:#F97583\">px\u003C/span>\u003Cspan style=\"color:#79B8FF\"> rgba\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">0.1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>And then the part that makes the magic work: \u003Ccode>@container scroll-state(stuck: top)\u003C/code>. This waits for the header to be stuck at the top of the page. Within this query I have added the different styling for the nav.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"css\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">@container\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> scroll-state(stuck: top) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">  nav\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    background\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">linear-gradient\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#F97583\">deg\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">transparent\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#F97583\">%\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">--white\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#79B8FF\">90\u003C/span>\u003Cspan style=\"color:#F97583\">%\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    border-radius\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 12\u003C/span>\u003Cspan style=\"color:#F97583\">px\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 12\u003C/span>\u003Cspan style=\"color:#F97583\">px\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    backdrop-filter\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">blur\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#F97583\">px\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    -webkit-backdrop-filter\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">blur\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">5\u003C/span>\u003Cspan style=\"color:#F97583\">px\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    box-shadow\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#F97583\">px\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 4\u003C/span>\u003Cspan style=\"color:#F97583\">px\u003C/span>\u003Cspan style=\"color:#79B8FF\"> rgba\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">0.1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>This was way easier than I expected it to be. The effect I have created is subtle, but I think it looks way better than before.\u003C/p>\n\u003Ch3 id=\"full-code\">Full Code\u003C/h3>\n\u003Cp>thats all.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"css\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">header\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  display\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">flex\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  justify-content\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">space-between\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  align-items\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">center\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  justify-self\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">center\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  position\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">sticky\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  top\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  width\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">90\u003C/span>\u003Cspan style=\"color:#F97583\">vw\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  max-width\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">75\u003C/span>\u003Cspan style=\"color:#F97583\">rem\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  z-index\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">50\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">nav\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  width\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">100\u003C/span>\u003Cspan style=\"color:#F97583\">%\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  max-width\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">65\u003C/span>\u003Cspan style=\"color:#F97583\">rem\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  background\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">linear-gradient\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#F97583\">deg\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">transparent\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#F97583\">%\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">--white\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#79B8FF\">90\u003C/span>\u003Cspan style=\"color:#F97583\">%\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  border-radius\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  backdrop-filter\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">blur\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#F97583\">px\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  -webkit-backdrop-filter\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">blur\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">5\u003C/span>\u003Cspan style=\"color:#F97583\">px\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  box-shadow\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#F97583\">px\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 4\u003C/span>\u003Cspan style=\"color:#F97583\">px\u003C/span>\u003Cspan style=\"color:#79B8FF\"> rgba\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">0.1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">@supports\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#79B8FF\">container-type\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: scroll-state) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">  header\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    container-type\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: scroll-state;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    container-name\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: header;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">  nav\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    width\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">100\u003C/span>\u003Cspan style=\"color:#F97583\">%\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    max-width\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">65\u003C/span>\u003Cspan style=\"color:#F97583\">rem\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    border-radius\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    box-shadow\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#F97583\">px\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 2\u003C/span>\u003Cspan style=\"color:#F97583\">px\u003C/span>\u003Cspan style=\"color:#79B8FF\"> rgba\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">0.1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  @container\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> scroll-state(stuck: top) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">    nav\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">      background\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">linear-gradient\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#F97583\">deg\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">transparent\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#F97583\">%\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">var\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">--white\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#79B8FF\">90\u003C/span>\u003Cspan style=\"color:#F97583\">%\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">      border-radius\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 12\u003C/span>\u003Cspan style=\"color:#F97583\">px\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 12\u003C/span>\u003Cspan style=\"color:#F97583\">px\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">      backdrop-filter\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">blur\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#F97583\">px\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">      -webkit-backdrop-filter\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">blur\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">5\u003C/span>\u003Cspan style=\"color:#F97583\">px\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">      box-shadow\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#F97583\">px\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 4\u003C/span>\u003Cspan style=\"color:#F97583\">px\u003C/span>\u003Cspan style=\"color:#79B8FF\"> rgba\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">0.1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"sources\">Sources\u003C/h3>\n\u003Cp>\u003Ca href=\"https://developer.chrome.com/blog/css-scroll-state-queries#progressive_enhancement\">CSS scroll-state() - chrome for developers\u003C/a>\u003C/p>",{"headings":164,"localImagePaths":174,"remoteImagePaths":175,"frontmatter":176,"imagePaths":181},[165,168,171],{"depth":14,"slug":166,"text":167},"header-and-nav","Header and Nav",{"depth":74,"slug":169,"text":170},"full-code","Full Code",{"depth":74,"slug":172,"text":173},"sources","Sources",[],[],{"id":74,"title":151,"pubDate":177,"description":153,"image":178,"tags":179,"lang":30,"relatedPosts":180},["Date","2025-05-15T00:00:00.000Z"],{"url":155,"alt":110},[112,113,114],[101,117],[],"debounce",{"id":182,"data":184,"body":195,"filePath":196,"digest":197,"rendered":198},{"id":47,"title":185,"pubDate":186,"description":187,"image":188,"tags":191,"lang":194},"JS Debouncing",["Date","2025-04-25T00:00:00.000Z"],"In deze post leg ik uit wat debouncing is en hoe ik het heb toegepast in een project tijdens mijn stage.",{"url":189,"alt":190},"https://docs.astro.build/assets/rose.webp","The Astro logo on a dark background with a pink glow.",[192,193,114],"JS","stage","nl","# Debouncing\n\nIn deze post leg ik uit wat debouncing is en hoe ik heb toegepast in een project tijdens mijn stage.\n\n## ComboBox.svelte\n\nDit component laat gebruikers een prijs range invoeren of selecteren, om alleen items te zien die binnen deze range vallen. De gebruiker kan ook alleen een minimale of maximale prijs invoeren.\n\nWanneer een gebruiker focust op een input veld, verschijnt de bijbehorende `\u003Cdiv>` met suggesties. Als in het andere input veld al een waarde geselecteerd is, krijg je hier alleen suggesties te zien die groter/kleiner zijn dan die waarde.\n\nIk heb bij dit component een debounce functie gebruikt om onnodige re-renders en errors te voorkomen.\n\n## Debounce\n\n### Wat is debouncing?\n\nDebouncing is een techniek waarbij een functie pas wordt uitgevoerd na een korte vertraging nadat de gebruiker stopt met typen. Dit voorkomt dat de functie telkens wordt aangeroepen tijdens het typen. Dit word vaak gebruikt bij searchbars of filters.\n\nIk gebruik in dit component debouncing om de filter logica pas uit te voeren nadat de gebruiker stopt met typen.\n\nDit is de debounce functie:\n\n```js\nlet debounceMinTimer;\nlet debounceMaxTimer;\n\nconst debounceMin = (value) => {\n  clearTimeout(debounceMinTimer); // Annuleer een eventuele vorige timer\n\n  debounceMinTimer = setTimeout(() => {\n    const numValue = Number(value);\n\n    if (selectedMaxValue && numValue >= 0 && numValue \u003C= selectedMaxValue) {\n      tempMinValue = numValue; // Bijwerken van de minimumwaarde\n      checkPriceValidity(); // Controleer of de prijzen geldig zijn\n    }\n  }, 500); // Debounce tijd van 500ms\n};\n\nconst debounceMax = (value) => {\n  clearTimeout(debounceMaxTimer); // Annuleer een eventuele vorige timer\n\n  debounceMaxTimer = setTimeout(() => {\n    const numValue = Number(value);\n\n    if (numValue >= tempMinValue) {\n      tempMaxValue = numValue; // Bijwerken van de maximumwaarde\n      checkPriceValidity(); // Controleer of de prijzen geldig zijn\n    }\n  }, 500); // Debounce tijd van 500ms\n};\n```\n\n### Hoe werkt debouncing?\n\nElke keer dat de gebruiker typt, wordt de vorige timer (als die bestaat) geannuleerd met `clearTimeout(debounceMinTimer)` of `clearTimeout(debounceMaxTimer)`. Dit voorkomt dat de filter functie te vaak wordt uitgevoerd.\n\nDaarna word een nieuwe timer ingesteld, die na 500ms de filterfunctie uitvoert. Dit betekent dat de filtering pas plaatsvindt als de gebruik een halve seconde niks heeft ingevoerd in het input veld. Dit wordt aangeroepen op de `\u003Cinput>` met `onkeyup`:\n\n`onkeyup={(e) => debounceMin(e.target.value)}`\n\nDus een halve seconde nadat de gebruiker een toets omhoog laat komen, wordt de filtering uitgevoerd.\n\nHierna wordt gecontroleerd of de ingevoerde minimum- en maximumprijs een geldige range zijn. De maximum prijs mag niet kleiner zijn dan de minimum prijs, en andersom.\n\n### Waarom heb ik het gebruikt?\n\nIk heb hier debouncing gebruikt, omdat wanneer ik begon met typen, de getypte waarde meteen vergeleken werd met de geselecteerde minimum prijs. Dus als ik €1000 geselecteerd heb voor de minimum prijs, en €5000 wil typen voor de maximum prijs, kreeg ik al een error na het typen van 5. Als deze error eenmaal in beeld kwam, zat ik vast. Wat ik verder type werd niet meer geupdate, ik kon de filter niet resetten, en moest de pagina refreshen om het opnieuw te proberen. Hier zou een gebruiker dus vast zitten.\n\nDit is geen gebruiksvriendelijke ervaring. Daarnaast werd de functie hier constant aangeroepen, wat voor overbodige re-renders zou kunnen zorgen, wat de performance zou kunnen beïnvloeden.\n\nIn [deze issue](https://github.com/users/lisagjh/projects/13/views/14?pane=issue&itemId=106915336&issue=lisagjh%7Ci-love-web%7C211) heb ik het voor het eerst toegepast, en in [deze issue](https://github.com/users/lisagjh/projects/13/views/14?pane=issue&itemId=107444261&issue=lisagjh%7Ci-love-web%7C215) heb ik de debouncing iets verbeterd. [Hier](https://svelte.dev/playground/f55e23d0bf4b43b1a221cf8b88ef9904?version=5.27.1#H4sIAAAAAAAAE22OTWrDMBCFrzLMJjaYxt0qtiFQeoLuqi4Ue1JE5bGxRm6D0N2LnJp20eX73g8vIpuRUOETXabAPcFz4MGMxGKcxwqv1pFH9RpRbnMOZoDVXjvP84NfyUlmF-PpP95PLMTiUWHj-8XO0mnW4khgNa49HE67FDvSkhVr6Sf2AsP-q4UV2g5itrT0jszyYkeaghRbqzzdnU1AC55k94vyT1PLalxe-8mnCh7rur7Xk-bm-HuRG8tzEJhYfdAtzG0sIohZ3kkUxHw-ECRI2_7-tNhwmeDYaY6rcQkrFPoSVLIESm8VirHu0_KA6mqcp_QNViAcLIYBAAA=) kan je een duidelijk en kort voorbeeld van debouncing in Svelte zien.\n\n## Conclusie\n\nDe debouncing techniek zorgt hier voor een fijne gebruikerservaring. Door de filtering pas uit te voeren nadat de gebruiker stopt met typen, worden onnodige herberekingen en re-renders voorkomen, en word er voorkomen dat de gebruiker vast komt te zitten op een error die te vroeg in beeld komt.","src/content/blog/debounce.md","453482d9c1afbecc",{"html":199,"metadata":200},"\u003Ch1 id=\"debouncing\">Debouncing\u003C/h1>\n\u003Cp>In deze post leg ik uit wat debouncing is en hoe ik heb toegepast in een project tijdens mijn stage.\u003C/p>\n\u003Ch2 id=\"comboboxsvelte\">ComboBox.svelte\u003C/h2>\n\u003Cp>Dit component laat gebruikers een prijs range invoeren of selecteren, om alleen items te zien die binnen deze range vallen. De gebruiker kan ook alleen een minimale of maximale prijs invoeren.\u003C/p>\n\u003Cp>Wanneer een gebruiker focust op een input veld, verschijnt de bijbehorende \u003Ccode>&#x3C;div>\u003C/code> met suggesties. Als in het andere input veld al een waarde geselecteerd is, krijg je hier alleen suggesties te zien die groter/kleiner zijn dan die waarde.\u003C/p>\n\u003Cp>Ik heb bij dit component een debounce functie gebruikt om onnodige re-renders en errors te voorkomen.\u003C/p>\n\u003Ch2 id=\"debounce\">Debounce\u003C/h2>\n\u003Ch3 id=\"wat-is-debouncing\">Wat is debouncing?\u003C/h3>\n\u003Cp>Debouncing is een techniek waarbij een functie pas wordt uitgevoerd na een korte vertraging nadat de gebruiker stopt met typen. Dit voorkomt dat de functie telkens wordt aangeroepen tijdens het typen. Dit word vaak gebruikt bij searchbars of filters.\u003C/p>\n\u003Cp>Ik gebruik in dit component debouncing om de filter logica pas uit te voeren nadat de gebruiker stopt met typen.\u003C/p>\n\u003Cp>Dit is de debounce functie:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">let\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> debounceMinTimer;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">let\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> debounceMaxTimer;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#B392F0\"> debounceMin\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#FFAB70\">value\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  clearTimeout\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(debounceMinTimer); \u003C/span>\u003Cspan style=\"color:#6A737D\">// Annuleer een eventuele vorige timer\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  debounceMinTimer \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> setTimeout\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(() \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> numValue\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#B392F0\"> Number\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(value);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (selectedMaxValue \u003C/span>\u003Cspan style=\"color:#F97583\">&#x26;&#x26;\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> numValue \u003C/span>\u003Cspan style=\"color:#F97583\">>=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#F97583\"> &#x26;&#x26;\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> numValue \u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> selectedMaxValue) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      tempMinValue \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> numValue; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Bijwerken van de minimumwaarde\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">      checkPriceValidity\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(); \u003C/span>\u003Cspan style=\"color:#6A737D\">// Controleer of de prijzen geldig zijn\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }, \u003C/span>\u003Cspan style=\"color:#79B8FF\">500\u003C/span>\u003Cspan style=\"color:#E1E4E8\">); \u003C/span>\u003Cspan style=\"color:#6A737D\">// Debounce tijd van 500ms\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#B392F0\"> debounceMax\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#FFAB70\">value\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  clearTimeout\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(debounceMaxTimer); \u003C/span>\u003Cspan style=\"color:#6A737D\">// Annuleer een eventuele vorige timer\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  debounceMaxTimer \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> setTimeout\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(() \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> numValue\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#B392F0\"> Number\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(value);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (numValue \u003C/span>\u003Cspan style=\"color:#F97583\">>=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> tempMinValue) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      tempMaxValue \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> numValue; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Bijwerken van de maximumwaarde\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">      checkPriceValidity\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(); \u003C/span>\u003Cspan style=\"color:#6A737D\">// Controleer of de prijzen geldig zijn\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }, \u003C/span>\u003Cspan style=\"color:#79B8FF\">500\u003C/span>\u003Cspan style=\"color:#E1E4E8\">); \u003C/span>\u003Cspan style=\"color:#6A737D\">// Debounce tijd van 500ms\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">};\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"hoe-werkt-debouncing\">Hoe werkt debouncing?\u003C/h3>\n\u003Cp>Elke keer dat de gebruiker typt, wordt de vorige timer (als die bestaat) geannuleerd met \u003Ccode>clearTimeout(debounceMinTimer)\u003C/code> of \u003Ccode>clearTimeout(debounceMaxTimer)\u003C/code>. Dit voorkomt dat de filter functie te vaak wordt uitgevoerd.\u003C/p>\n\u003Cp>Daarna word een nieuwe timer ingesteld, die na 500ms de filterfunctie uitvoert. Dit betekent dat de filtering pas plaatsvindt als de gebruik een halve seconde niks heeft ingevoerd in het input veld. Dit wordt aangeroepen op de \u003Ccode>&#x3C;input>\u003C/code> met \u003Ccode>onkeyup\u003C/code>:\u003C/p>\n\u003Cp>\u003Ccode>onkeyup={(e) => debounceMin(e.target.value)}\u003C/code>\u003C/p>\n\u003Cp>Dus een halve seconde nadat de gebruiker een toets omhoog laat komen, wordt de filtering uitgevoerd.\u003C/p>\n\u003Cp>Hierna wordt gecontroleerd of de ingevoerde minimum- en maximumprijs een geldige range zijn. De maximum prijs mag niet kleiner zijn dan de minimum prijs, en andersom.\u003C/p>\n\u003Ch3 id=\"waarom-heb-ik-het-gebruikt\">Waarom heb ik het gebruikt?\u003C/h3>\n\u003Cp>Ik heb hier debouncing gebruikt, omdat wanneer ik begon met typen, de getypte waarde meteen vergeleken werd met de geselecteerde minimum prijs. Dus als ik €1000 geselecteerd heb voor de minimum prijs, en €5000 wil typen voor de maximum prijs, kreeg ik al een error na het typen van 5. Als deze error eenmaal in beeld kwam, zat ik vast. Wat ik verder type werd niet meer geupdate, ik kon de filter niet resetten, en moest de pagina refreshen om het opnieuw te proberen. Hier zou een gebruiker dus vast zitten.\u003C/p>\n\u003Cp>Dit is geen gebruiksvriendelijke ervaring. Daarnaast werd de functie hier constant aangeroepen, wat voor overbodige re-renders zou kunnen zorgen, wat de performance zou kunnen beïnvloeden.\u003C/p>\n\u003Cp>In \u003Ca href=\"https://github.com/users/lisagjh/projects/13/views/14?pane=issue&#x26;itemId=106915336&#x26;issue=lisagjh%7Ci-love-web%7C211\">deze issue\u003C/a> heb ik het voor het eerst toegepast, en in \u003Ca href=\"https://github.com/users/lisagjh/projects/13/views/14?pane=issue&#x26;itemId=107444261&#x26;issue=lisagjh%7Ci-love-web%7C215\">deze issue\u003C/a> heb ik de debouncing iets verbeterd. \u003Ca href=\"https://svelte.dev/playground/f55e23d0bf4b43b1a221cf8b88ef9904?version=5.27.1#H4sIAAAAAAAAE22OTWrDMBCFrzLMJjaYxt0qtiFQeoLuqi4Ue1JE5bGxRm6D0N2LnJp20eX73g8vIpuRUOETXabAPcFz4MGMxGKcxwqv1pFH9RpRbnMOZoDVXjvP84NfyUlmF-PpP95PLMTiUWHj-8XO0mnW4khgNa49HE67FDvSkhVr6Sf2AsP-q4UV2g5itrT0jszyYkeaghRbqzzdnU1AC55k94vyT1PLalxe-8mnCh7rur7Xk-bm-HuRG8tzEJhYfdAtzG0sIohZ3kkUxHw-ECRI2_7-tNhwmeDYaY6rcQkrFPoSVLIESm8VirHu0_KA6mqcp_QNViAcLIYBAAA=\">Hier\u003C/a> kan je een duidelijk en kort voorbeeld van debouncing in Svelte zien.\u003C/p>\n\u003Ch2 id=\"conclusie\">Conclusie\u003C/h2>\n\u003Cp>De debouncing techniek zorgt hier voor een fijne gebruikerservaring. Door de filtering pas uit te voeren nadat de gebruiker stopt met typen, worden onnodige herberekingen en re-renders voorkomen, en word er voorkomen dat de gebruiker vast komt te zitten op een error die te vroeg in beeld komt.\u003C/p>",{"headings":201,"localImagePaths":222,"remoteImagePaths":223,"frontmatter":224,"imagePaths":228},[202,205,208,210,213,216,219],{"depth":47,"slug":203,"text":204},"debouncing","Debouncing",{"depth":14,"slug":206,"text":207},"comboboxsvelte","ComboBox.svelte",{"depth":14,"slug":182,"text":209},"Debounce",{"depth":74,"slug":211,"text":212},"wat-is-debouncing","Wat is debouncing?",{"depth":74,"slug":214,"text":215},"hoe-werkt-debouncing","Hoe werkt debouncing?",{"depth":74,"slug":217,"text":218},"waarom-heb-ik-het-gebruikt","Waarom heb ik het gebruikt?",{"depth":14,"slug":220,"text":221},"conclusie","Conclusie",[],[],{"id":47,"title":185,"pubDate":225,"description":187,"image":226,"tags":227,"lang":194},["Date","2025-04-25T00:00:00.000Z"],{"url":189,"alt":190},[192,193,114],[],"learn-php",{"id":229,"data":231,"body":237,"filePath":238,"digest":239,"rendered":240},{"id":14,"title":232,"pubDate":233,"description":234,"tags":235,"lang":194},"Introduction to PHP",["Date","2025-05-14T00:00:00.000Z"],"Mijn aantekeningen bij het leren van PHP.",[236,114],"PHP","# Table of Contents\n\n- [Introduction to PHP](#introduction-to-php)\n  - [History of PHP](#history-of-php)\n  - [How is PHP used in HTML?](#how-is-php-used-in-html)\n  - [How is PHP executed?](#how-is-php-executed)\n  - [PHP comments](#php-comments)\n    - [Example - Todo list](#voorbeeld---todo-list)\n- [PHP strings & variables](#php-strings--variables)\n  - [Escape Sequences](#escape-sequences)\n  - [String Concatenation](#string-concatenation)\n  - [Variables](#variables)\n    - [Variable parsing](#variable-parsing)\n    - [Curly braces](#curly-braces)\n  - [Concatenating Assignment Operator](#concatenating-assignment-operator)\n  - [Assign by Reference](#assign-by-reference)\n- [Numbers](#numbers)\n  - [Mathematical Assignment Operators](#mathematical-assignment-operators)\n  - [Table Overview Operators](#tabel-overzicht-operators)\n- [PHP Functions](#php-functions)\n  - [Introduction to Functions](#introduction-to-functions)\n    - [Multiple Parameters](#multiple-parameters)\n    - [Default Parameters](#default-parameters)\n    - [Pass by Reference](#pass-by-reference)\n    - [Variable Scope](#variable-scope)\n  - [Introduction to Built-In Functions](#introduction-to-built-in-functions)\n    - [Working with Variables](#werken-met-variables)\n    - [Working with Substrings](#werken-met-substrings)\n- [Bronnen](#bronnen)\n\n# Introduction to PHP\n\n## History of PHP\n\nIn 1994 is PHP gecreeërd.\n\nPHP is een van de fundamentele technologieën van web development, en een van de meest gebruikte server side technologieën. Het word vooral veel gebruikt met populaire CMS'en: WordPress, Drupal, Joomla.\nOok is veel van de underlying code van WooCommerce and Magento gebaseerd op PHP.\n\nPHP heeft veel built-in functionaliteit voor interactie met data. Vanilla PHP alleen kan ook gebruikt worden om web app backends te bouwen. Maar er zijn ook verschillende krachtige frameworks: Laravel, CakePHP, Symfony.\n\n## How is PHP used in HTML?\n\nPHP word gebruikt om dynamische web pages te bouwen.\n\nPHP is ontworpen om goed samen te werken met HTML, waardoor het in-line gebruikt kan worden in een HTML document. Als de website gerendered word, word de PHP uitgevoerd, en als HTML toegevoegd.\n\nHet begin van een PHP line start met: `\u003C?php` en eindigt met `?>`. Bijvoorbeeld:\n\n```html\n\u003Cp>This HTML will get delivered as is\u003C/p>\n\u003C?php echo \"\u003Cp>But this code is interpreted by PHP and turned into HTML\u003C/p>\";?>\n\n```\n\nIn PHP, wordt het `echo` keyword gebruikt voor output text. De tekst in dit geval is alles tussen de `\"aanhalingstekens\"` . Een instructie die in PHP is geschreven heeft een `statement`. Een semicolon `;` is required aan het eind van elk statement.\n\n## How is PHP executed?\n\nPHP kan niet alleen gebruikt worden om dynamische HTML te genereren, maar ook als programmeertaal via de terminal. Wanneer je een PHP-script schrijft, begin je ook altijd met `\u003C?php`, maar de afsluitende tag is meestal niet nodig, en word als conventie vaak weg gelaten.\n\nPHP negeert witruimte, en is deels niet hoofdlettergevoelig – bijvoorbeeld, `echo` en `Echo` werken beide. Toch is het aangeraden om de standaard schrijfwijze (`echo`) te gebruiken.\n\n## PHP comments\n\nEr zijn twee manieren om comments te gebruiken in PHP. De eerste is `single line comments`. Hier word `#` of `//` gebruikt.\n\nDe tweede soort is een `multi line comment`. Hier gebruik je `/* comment */` om meerdere lines of code uit te commenten.\n\n### Voorbeeld - Todo list\n\nDe Todo list is een goed voorbeeld, omdat hier de CRUD behaviors worden gebruikt - create, read, update, delete.\n\n```php\n\u003C?php\n\nrequire 'vendor/autoload.php';\n\n// Verbinding maken met de database\n$pdo = new \\PDO(\"sqlite:\" . \"db/sqlite.db\");\n\n// Nieuwe TODO aanmaken\nif (isset($_POST['submit'])) {\n    $description = $_POST['description'];\n    $sth = $pdo->prepare(\"INSERT INTO todos (description) VALUES (:description)\");\n    $sth->bindValue(':description', $description, PDO::PARAM_STR);\n    $sth->execute();\n}\n\n// TODO verwijderen\nelseif (isset($_POST['delete'])) {\n    $id = $_POST['id'];\n    $sth = $pdo->prepare(\"DELETE FROM todos WHERE id = :id\");\n    $sth->bindValue(':id', $id, PDO::PARAM_INT);\n    $sth->execute();\n}\n\n// TODO markeren als compleet\nelseif (isset($_POST['complete'])) {\n    $id = $_POST['id'];\n    $sth = $pdo->prepare(\"UPDATE todos SET complete = 1 WHERE id = :id\");\n    $sth->bindValue(':id', $id, PDO::PARAM_INT);\n    $sth->execute();\n}\n?>\n\n\u003C!DOCTYPE html>\n\u003Chtml lang=\"en\">\n\u003Chead>\n    \u003Cmeta charset=\"UTF-8\">\n    \u003Ctitle>Todo List\u003C/title>\n\u003C/head>\n\u003Cbody class=\"container\">\n    \u003Ch1>Todo List\u003C/h1>\n\n    \u003Cform method=\"post\" action=\"\">\n        \u003Cinput type=\"text\" name=\"description\" value=\"\">\n        \u003Cinput type=\"submit\" name=\"submit\" value=\"Add\">\n    \u003C/form>\n\n    \u003Ch2>Current Todos\u003C/h2>\n\n    \u003Ctable class=\"table table-striped\">\n        \u003Cthead>\n            \u003Ctr>\n                \u003Cth>Task\u003C/th>\n                \u003Cth>\u003C/th>\n                \u003Cth>\u003C/th>\n            \u003C/tr>\n        \u003C/thead>\n        \u003Ctbody>\n            \u003C?php\n            $sth = $pdo->prepare(\"SELECT * FROM todos ORDER BY id DESC\");\n            $sth->execute();\n\n            foreach ($sth as $row): ?>\n                \u003Ctr>\n                    \u003Ctd>\u003C?= htmlspecialchars($row['description']) ?>\u003C/td>\n                    \u003Ctd>\n                        \u003C?php if (!$row['complete']): ?>\n                            \u003Cform method=\"POST\">\n                                \u003Cbutton type=\"submit\" name=\"complete\">Complete\u003C/button>\n                                \u003Cinput type=\"hidden\" name=\"id\" value=\"\u003C?= $row['id'] ?>\">\n                                \u003Cinput type=\"hidden\" name=\"complete\" value=\"true\">\n                            \u003C/form>\n                        \u003C?php else: ?>\n                            Task Complete!\n                        \u003C?php endif; ?>\n                    \u003C/td>\n                    \u003Ctd>\n                        \u003Cform method=\"POST\">\n                            \u003Cbutton type=\"submit\" name=\"delete\">Delete\u003C/button>\n                            \u003Cinput type=\"hidden\" name=\"id\" value=\"\u003C?= $row['id'] ?>\">\n                            \u003Cinput type=\"hidden\" name=\"delete\" value=\"true\">\n                        \u003C/form>\n                    \u003C/td>\n                \u003C/tr>\n            \u003C?php endforeach; ?>\n        \u003C/tbody>\n    \u003C/table>\n\u003C/body>\n\u003C/html>\n\n```\n\n# PHP strings & variables\n\n- String: woorden of stukken tekst die door de computer worden gezien als een item. Een string is een reeks karakters, tussen `\"quotation marks\"`.\n\n```php\n\u003C?php\necho \"Hello World!\" ;\n```\n\nHet is belangrijk om duidelijk te maken wat een string is en wat niet in een PHP program. Elk deel van de code is tekst, maar de strings zijn data - deze moeten niet uitgevoerd worden door de computer.\n\n## Escape Sequences\n\nAan het begin en eind van een string gebruiken we aanhalingstekens. Deze laten de computer weten dat alles daar tussen een stukje data is.\n\nAls je binnen die string iets tussen aanhalingstekens zet, herkent PHP dit niet en krijg je een syntax error.\n\n```php\necho \"She said \"hi\" to the dog.\"; //syntax error, unexpected 'hi' (T_STRING)\n```\n\nDit kan je oplossen door `\\` backslashes om het deel van de string te zetten met de aanhalingstekens. Dit noem je een _escape sequence_.\n\nBij het printen van meerdere strings heb je ook een escape sequence nodig:\n\n```php\necho \"1. Go to gym\";\necho \"2. Cook dinner\";\n\n/* output:\n1. Go to gym2. Cook dinner\n*/\n```\n\nHier kun je `\\n` er voor zetten, om aan te geven dat het op een nieuwe regel moet staan:\n\n```php\necho \"1. Go to gym\";\necho \"\\n2. Cook dinner\";\n\n1. Go to gym\n2. Cook dinner\n*/\n```\n\n```php\necho \"1. Teach PHP\";\necho \"\\n2. Something else\";\necho \"\\n3. Learn to have \\\"fun\\\"\";\n```\n\n## String Concatenation\n\n```php\necho \"Code\" . \"cademy\";\necho \"\\nMy name is:\" . \" \" . \"Lisa\";\necho \"\\n\" . \"tur\" . \"duck\" . \"en\";\n```\n\n## Variables\n\nIn PHP gebruik je het `$` teken om een variabele te definiëren. Variable names kunnen nummers, letters en underscores (`_`) bevatten, maar moeten altijd beginnen met een letter of underscore. De variable names zijn case sensitive, dus `$my_example` en `$My_example` worden als twee verschillende variables gezien.\n\nEen veel gebruikte conventie bij benaming is het gebruik van een underscore tussen twee woorden, oftewel `snake_case`.\n\n```php\n$name = \"Lisa\";\n$language = \"php\";\n\necho \"I am\" . $name;\necho \"\\n\" . $language\n```\n\n### Variable parsing\n\n```php\n$dog_name = \"Tadpole\";\n$favorite_food = \"salmon\";\n$color = \"brown\";\n\necho \"I have a $color dog named $dog_name and her favorite food is $favorite_food.\";\n// Prints: I have a brown dog named Tadpole and her favorite food is salmon.\n```\n\n#### curly braces\n\nDit voorbeeld geeft een error, omdat `toys` niet bestaat.\n\n```php\n$toy = \"frisbee\";\necho \"Alex likes playing with $toys\";\n```\n\nAls je achter de variable iets wilt zetten, kan je de variabele in curly braces wrappen – `${variable}`. Alles wat er dan direct achter staat word er aan geplakt.\n\n```php\n$dog_name = \"Tadpole\";\n$favorite_food = \"treat\";\n$color = \"brown\";\n\necho \"I have a ${color}ish dog named $dog_name and her favorite food is ${favorite_food}s.\";\n// Prints: I have a brownish dog named Tadpole and her favorite food is treats.\n```\n\n## Concatenating Assignment Operator\n\n```php\n$sentence = \"\\nI'm going on a picnic, and I'm taking apples\";\n$sentence .= \", but also milk\";\n$sentence .= \", cant do nuts though\";\n\necho $sentence;\n// Prints: I'm going on a picnic, and I'm taking apples, but also milk, cant do nuts though\n```\n\n## Assign by Reference\n\nWanneer we een variabele toewijzen aan een andere variabele, reserveert de computer een nieuw stukje geheugen dat wordt gekoppeld aan de linkeroperand, en slaat daar een kopie op van de waarde van de rechteroperand.\n\nDe nieuwe variabele is een kopie van de waarde van de originele variabele, maar het is een onafhankelijke variabele; verandering bij de een heeft geen invloed op de ander.\n\n**Voorbeeld:**\n\n```php\n$first_player_rank = \"Beginner\";\n$second_player_rank = $first_player_rank;\necho $second_player_rank; // Prints: Beginner\n\n$first_player_rank = \"Intermediate\"; // Reassign the value of $first_player_rank\necho $second_player_rank; // Still Prints: Beginner\n```\n\nJe kan ook een alias maken, een bijnaam. In plaats van een kopie van de originele variabele waarde, maken we een nieuwe naam die naar de zelfde plek in het geheugen verwijst. Hier word een andere operator voor gebruikt, de reference assignment oeprator – `=&`.\n\nAls we \"assign by reference\" gebruiken, zeggen we dat de variabele aan de linker kant van de operator verwijzen naar exact dezelfde data als de variabele rechts. Met assignment by reference, veranderingen aan de ene variabele hebben wel invloed op de ander.\n\n**Voorbeeld:**\n\n```php\n$first_player_rank = \"Beginner\";\n$second_player_rank =& $first_player_rank;\necho $second_player_rank; // Prints: Beginner\n\n$first_player_rank = \"Intermediate\"; // Reassign the value of $first_player_rank\necho $second_player_rank; // Prints: Intermediate\n\n```\n\n**Voorbeeld assign by reference:**\n\n```php\n/* Imagine a lot of code here */\n$very_bad_unclear_name = \"15 chicken wings\";\n\n$order =& $very_bad_unclear_name;\n$order .= \", 3 nuggets\";\necho \"\\nYour order is: $very_bad_unclear_name.\";\n\n// Your order is: 15 chicken wings, 3 nuggets.\n```\n\n```php\n$name = \"Tadpole\";\n$title = \", Princess of Dogulon\";\n$name .= $title;\necho $name;\n```\n\n---\n\n# Numbers\n\nPHP heeft twee nummer data types. De `integer` data type is een heel positief of negatief nummers (3, 4500, -98, 0). De `floating point` data type is decimale nummers (4.1, 2.999, -9.2, -1827.98)\n\n```php\n$my_int = 78;\n$my_float = 89.9;\n\necho $my_int; // Prints: 78\necho \"\\n\"; // new line\necho $my_float; // Prints 89.9\n```\n\nEr zijn ook verschillende operators die we kunnen gebruiken.\n\n```php\necho 5 + 1; // Prints: 6\necho 6.6 + 1.2; // Prints: 7.8\necho 198263 - 263;  // Prints: 198000\necho -22.8 - 19.1; // Prints: -41.9\n```\n\nOp deze manier kunnen we ook rekenen met variabelen:\n\n```php\n$tadpole_age = 7;\n$lily_age = 6;\n$age_difference = $tadpole_age - $lily_age;\necho $age_difference; // Prints 1\n```\n\nEn ook delen en keer\n\n```php\n$num_languages = 4;\n$months = 11;\n$days = $months * 16;\n\n$days_per_language = $days / $num_languages;\n\necho $days_per_language;\n```\n\nMaar ook een exponentiation operatotr – `**`.\n\n```php\necho 4 ** 2; // Prints: 16`\n```\n\nDit kan op floats en negatieve nummers ook gebruikt worden\n\n```php\necho 2.89 ** 3.2;  // Prints: 29.845104015297\necho 10 ** -1; // Prints: 0.1\n```\n\nEn de modula operator – `%`. Deze operator returns de remainder, het overblijfsel van de linker operand gedeeld door de rechter operand.\n\n```php\necho 7 % 3; // Prints: 1\n```\n\nJe kan ook bepaalde sommen tussen haakjes zetten.\n\n```php\necho 94 - 4.25 + 7 - (23.50 * 1.2) + (20 / 4);\n```\n\nDe volgorde van de operations word zo bepaald:\n\n1. Any operation wrapped in parentheses (`()`)\n2. Exponents (`**`)\n3. Multiplication (`*`) and division (`/`)\n4. Addition (`+`) and subtraction (`-`).\n\nThe acronym PEMDAS can be helpful for remembering the order of precedence for these arithmetic operations.\n\n### Tabel\n\n| **Operation**  | **Symbol** | **Example**        | **Output** |\n| -------------- | ---------- | ------------------ | ---------- |\n| Addition       | `+`        | `echo 1 + 4.5;`    | 5.5        |\n| Subtraction    | `-`        | `echo 9 - 1;`      | 8          |\n| Multiplication | `*`        | `echo -1.9 * 2.9;` | -5.51      |\n| Division       | `/`        | `echo 9 / 1;`      | 9          |\n| Modulo         | `%`        | `echo 11 % 3;`     | 2          |\n| Exponentiation | `**`       | `echo 8 ** 2;`     | 64         |\n\n## Mathematical Assignment Operators\n\n```php\n$savings = 800;\n$bike_cost = 75;\n$savings = $savings - $bike_cost;\necho $savings; // Prints: 725\n\n// kan korter! MAND --->\n\n$savings = 800;\n$bike_cost = 75;\n$savings -= $bike_cost;\necho $savings; // Prints: 725\n```\n\nPHP heeft ook `increment operators`:\n\n```php\n$age = 89;\n$age++;\necho $age; // Prints: 90\n\n$days_til_vacation = 7;\n$days_til_vacation--;\necho $days_til_vacation; // Prints: 6\n```\n\n### Tabel Overzicht Operators\n\n| **Operation:** | **Long Syntax:** | **Short Syntax:** |\n| -------------- | ---------------- | ----------------- |\n| Add            | $x = $x + $y     | $x += $y          |\n| Subtract       | $x = $x - $y     | $x -= $y          |\n| Multiply       | $x = $x \\* $y    | $x \\*= $y         |\n| Divide         | $x = $x / $y     | $x /= $y          |\n| Modulo         | $x = $x % $y     | $x %= $y          |\n\n---\n\n# PHP Functions\n\nBronnen bij dit deel:\n\n- [PHP functions](https://www.codecademy.com/resources/docs/php/functions)\n- [Introduction to functions - cheatsheet](https://www.codecademy.com/learn/learn-php-functions/modules/introduction-to-functions-in-php/cheatsheet)\n\n## Introduction to Functions\n\n```php\nfunction greetLearner()\n{\n  echo \"Hello, Learner!\\n\";\n  echo \"I hope you're enjoying PHP!\\n\";\n  echo \"Love, Codecademy\";\n}\n\n// invoke function:\ngreetLearner();\n```\n\n```php\nfunction printStringReturnNumber()\n{\n  echo \"ERROR: Page not found!\\n\";\n  return 404;\n}\n\n$my_num = printStringReturnNumber();\necho $my_num;\n\n// prints:\n// ERROR: Page not found!\n// 404\n```\n\n```php\nfunction first()\n{\n  return \"You did it!\\n\";\n}\n\nfunction second()\n{\n  return \"You're amazing!\\n\";\n}\n\nfunction third()\n{\n  return \"You're a coding hero!\\n\";\n}\n\necho first() . \" \" . second() . \" \" . third() ;\n```\n\n```php\nfunction sayCustomHello($name)\n{\necho \"Hello, $name!\";\n};\n\nsayCustomHello(\"Aisle Nevertell\"); // Prints: Hello, Aisle Nevertell!\n\nsayCustomHello(\"Codecademy learner\"); // Prints: Hello, Codecademy Learner!\n\n```\n\n```php\nfunction increaseEnthusiasm($val)\n{\nreturn $val . \"!\";\n}\n\nfunction repeatThreeTimes($string)\n{\nreturn $string . $string . $string;\n}\n\necho increaseEnthusiasm(\"henlo\");\necho repeatThreeTimes(\"hi\");\necho increaseEnthusiasm(repeatThreeTimes(\"HI\"));\n```\n\n### Multiple Parameters\n\nWe kunnen ook functies met meerdere parameters definiëren.\n\n```php\nfunction divide($num_one, $num_two)\n{\n  return $num_one / $num_two;\n};\n\necho divide(12, 3); // Prints: 4\necho divide(3, 12); // Prints: 0.25\n```\n\n❗️ Een functie met minder argumenten aanroepen dan er verwacht worden geven errors, zoals deze:\n\n```php\nfunction expectTwo($first, $second)\n{\n  return \"whatever\";\n}\n\necho expectTwo(\"test\"); // ❌ Will result in an error\n```\n\n**Voorbeeeld:**\n\n```php\nfunction calculateArea($one, $two)\n{\nreturn $one * $two;\n}\n\nfunction calculateVolume($one, $two, $three)\n{\nreturn $one * $two * $three;\n}\n\necho calculateArea(3, 5); // 15\necho calculateVolume(3, 5, 2); // 30\n```\n\n### Default Parameters\n\nJe kan errors voorkomen door een default parameters mee te geven aan de functie. Als er dan geen argument word meegegeven als de functie invoked word, word deze gebruikt. Als er wel een argument word meegegeven, word deze overschreven.\n\n```php\nfunction greetFriend($name = \"old chum\")\n{\n  echo \"Hello, $name!\";\n};\n\ngreetFriend(\"Marvin\"); // Prints: Hello, Marvin!\n\ngreetFriend(); // Prints: Hello, old chum!\n```\n\n### Pass by Reference\n\nWe kunnen functions met variables aanroepen of met directe waardes. Als we een function invoken met een variable als argument, is het alsof we die waarde toewijzen aan de function's parameter. We wijzen een kopie van de waarde van de argument variable toe. Het variable argument en de parameter zijn aparte entities; verandering aan de parameter in de functie heeft geen effect op de waarde die gepassed is.\n\n```php\nfunction addX ($param)\n{\n  $param = $param . \"X\";\n  echo $param;\n};\n$word = \"Hello\";\naddX($word); // Prints: HelloX\necho $word; // Prints: Hello\n```\n\nAls we wel permanent een variabele willen veranderen, daan zetten we een `&` voor de parameter argument van de functie.\n\n```php\nfunction addXPermanently (&$param)\n{\n  $param = $param . \"X\";\n  echo $param;\n};\n$word = \"Hello\";\naddXPermanently($word); // Prints: HelloX\necho $word; // Prints: HelloX\n```\n\n**Voorbeeld**\n\n```php\n$string_one = \"you have teeth\";\n$string_two = \"toads are nice\";\n$string_three = \"brown is my favorite color\";\n\nfunction convertToQuestion(&$str) // gebruik van &\n{\n$str = \"Do you think \" . $str . \"?\\n\";\n// redefinieren van string argument\n}\n\n// in de console de nieuwe string variabele\necho convertToQuestion($string_one);\necho convertToQuestion($string_two);\necho convertToQuestion($string_three)\n```\n\n### Variable Scope\n\n```php\nfunction calculateDaysLeft($feed_quantity, $number, $rate)\n{\n  $result = $feed_quantity / ($number * $rate);\n  return $result;\n}\n\necho calculateDaysLeft(300, 2, 30);\n```\n\n## Introduction to Built-In Functions\n\nPHP heeft een aantal built-in functions. Deze functies – ook bekend als internal functions – kunnen aangeroepen worden zonder dat wij ze zelf te hoeven schrijven.\n\n```php\necho(\"This works!\\n\");\necho \"This also works!\\n\";\necho \"Buuuut!\", \" \", \"This\", \" \", \"does!\", \"\\n\";\n//echo(\"This would NOT work\", \"\\n\");\n```\n\n### Werken met Variables\n\nPHP heeft een handige built-in function voor het verkrijgen van informatie over de variables, zoals `gettype()`. Deze functie neemt een argument en returned een string waarde die aangeeft wat voor data type het argument is.\n\n```php\n$name = \"Aisle Nevertell\";\n$age = 1000000;\n\necho gettype($name); // Prints: string\necho gettype($age); // Prints: integer\n```\n\nEen andere functie die ook een variabele argument gebruikt is de `var_dump()` functie. Het print details over het argument dat het krijgt. Het laat zien wat voor soort data type het is, en welke waarde het heeft. Voor een string laat het de lengte hiervan zien.\n\n```php\nvar_dump($name); // Prints: string(15) \"Aisle Nevertell\"\nvar_dump($age); // Prints: int(1000000)\n```\n\n`strrev()` krijgt een argument, een string, en draait deze om.\n\n```php\necho strrev(\"Hello, World!\"); // Prints: !dlroW ,olleH\n```\n\n`strtolower()` transformeert de argument string naar alleen kleine letters.\n\n```php\necho strtolower(\"HeLLo\"); // Prints: hello\n```\n\n`strrepeat()` neemt een string als eerste argument, en een nummer als het tweede. Het returned een string die de argument string zo vaak herhaald als het argument nummer.\n\n```php\necho str_repeat(\"hi\", 10); // Prints: hihihihihihihihihihi\n```\n\n### Werken met Substrings\n\nEen substring is een deel van een string. `substr_count()` is een functie die de hoeveelheid substrings in een string returned. Het neemt twee argumenten; de string die doorzocht word, en de substring die gezocht word — soms ook de `neelde` genoemd.\n\n```php\n$story = \"I was like, \\\"Dude, like just tell me what you like think because like everyone else is like being totally honest, and like I just want to know what you like think.\\\" So like I don't know...\";\n\necho substr_count($story, \"like\"); // Prints: 8\n```\n\n#### Bronnen\n\n- [Officiële PHP docs](https://www.php.net/manual/en/language.types.string.php)\n- [Variables - codecademy](https://www.codecademy.com/resources/docs/php/variables)\n- [PHP functions](https://www.codecademy.com/resources/docs/php/functions)\n- [Introduction to functions - cheatsheet](https://www.codecademy.com/learn/learn-php-functions/modules/introduction-to-functions-in-php/cheatsheet)","src/content/blog/learn-php.md","82456c5f602dfde0",{"html":241,"metadata":242},"\u003Ch1 id=\"table-of-contents\">Table of Contents\u003C/h1>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#introduction-to-php\">Introduction to PHP\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#history-of-php\">History of PHP\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#how-is-php-used-in-html\">How is PHP used in HTML?\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#how-is-php-executed\">How is PHP executed?\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#php-comments\">PHP comments\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#voorbeeld---todo-list\">Example - Todo list\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"#php-strings--variables\">PHP strings &#x26; variables\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#escape-sequences\">Escape Sequences\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#string-concatenation\">String Concatenation\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#variables\">Variables\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#variable-parsing\">Variable parsing\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#curly-braces\">Curly braces\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"#concatenating-assignment-operator\">Concatenating Assignment Operator\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#assign-by-reference\">Assign by Reference\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"#numbers\">Numbers\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#mathematical-assignment-operators\">Mathematical Assignment Operators\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#tabel-overzicht-operators\">Table Overview Operators\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"#php-functions\">PHP Functions\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#introduction-to-functions\">Introduction to Functions\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#multiple-parameters\">Multiple Parameters\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#default-parameters\">Default Parameters\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#pass-by-reference\">Pass by Reference\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#variable-scope\">Variable Scope\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"#introduction-to-built-in-functions\">Introduction to Built-In Functions\u003C/a>\n\u003Cul>\n\u003Cli>\u003Ca href=\"#werken-met-variables\">Working with Variables\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#werken-met-substrings\">Working with Substrings\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"#bronnen\">Bronnen\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"introduction-to-php\">Introduction to PHP\u003C/h1>\n\u003Ch2 id=\"history-of-php\">History of PHP\u003C/h2>\n\u003Cp>In 1994 is PHP gecreeërd.\u003C/p>\n\u003Cp>PHP is een van de fundamentele technologieën van web development, en een van de meest gebruikte server side technologieën. Het word vooral veel gebruikt met populaire CMS’en: WordPress, Drupal, Joomla.\nOok is veel van de underlying code van WooCommerce and Magento gebaseerd op PHP.\u003C/p>\n\u003Cp>PHP heeft veel built-in functionaliteit voor interactie met data. Vanilla PHP alleen kan ook gebruikt worden om web app backends te bouwen. Maar er zijn ook verschillende krachtige frameworks: Laravel, CakePHP, Symfony.\u003C/p>\n\u003Ch2 id=\"how-is-php-used-in-html\">How is PHP used in HTML?\u003C/h2>\n\u003Cp>PHP word gebruikt om dynamische web pages te bouwen.\u003C/p>\n\u003Cp>PHP is ontworpen om goed samen te werken met HTML, waardoor het in-line gebruikt kan worden in een HTML document. Als de website gerendered word, word de PHP uitgevoerd, en als HTML toegevoegd.\u003C/p>\n\u003Cp>Het begin van een PHP line start met: \u003Ccode>&#x3C;?php\u003C/code> en eindigt met \u003Ccode>?>\u003C/code>. Bijvoorbeeld:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"html\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">p\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>This HTML will get delivered as is&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">p\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FDAEB7;font-style:italic\">&#x3C;\u003C/span>\u003Cspan style=\"color:#E1E4E8\">?php echo \"&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">p\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>But this code is interpreted by PHP and turned into HTML&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">p\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\";?>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>In PHP, wordt het \u003Ccode>echo\u003C/code> keyword gebruikt voor output text. De tekst in dit geval is alles tussen de \u003Ccode>\"aanhalingstekens\"\u003C/code> . Een instructie die in PHP is geschreven heeft een \u003Ccode>statement\u003C/code>. Een semicolon \u003Ccode>;\u003C/code> is required aan het eind van elk statement.\u003C/p>\n\u003Ch2 id=\"how-is-php-executed\">How is PHP executed?\u003C/h2>\n\u003Cp>PHP kan niet alleen gebruikt worden om dynamische HTML te genereren, maar ook als programmeertaal via de terminal. Wanneer je een PHP-script schrijft, begin je ook altijd met \u003Ccode>&#x3C;?php\u003C/code>, maar de afsluitende tag is meestal niet nodig, en word als conventie vaak weg gelaten.\u003C/p>\n\u003Cp>PHP negeert witruimte, en is deels niet hoofdlettergevoelig – bijvoorbeeld, \u003Ccode>echo\u003C/code> en \u003Ccode>Echo\u003C/code> werken beide. Toch is het aangeraden om de standaard schrijfwijze (\u003Ccode>echo\u003C/code>) te gebruiken.\u003C/p>\n\u003Ch2 id=\"php-comments\">PHP comments\u003C/h2>\n\u003Cp>Er zijn twee manieren om comments te gebruiken in PHP. De eerste is \u003Ccode>single line comments\u003C/code>. Hier word \u003Ccode>#\u003C/code> of \u003Ccode>//\u003C/code> gebruikt.\u003C/p>\n\u003Cp>De tweede soort is een \u003Ccode>multi line comment\u003C/code>. Hier gebruik je \u003Ccode>/* comment */\u003C/code> om meerdere lines of code uit te commenten.\u003C/p>\n\u003Ch3 id=\"voorbeeld---todo-list\">Voorbeeld - Todo list\u003C/h3>\n\u003Cp>De Todo list is een goed voorbeeld, omdat hier de CRUD behaviors worden gebruikt - create, read, update, delete.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">&#x3C;?\u003C/span>\u003Cspan style=\"color:#79B8FF\">php\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">require\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'vendor/autoload.php'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Verbinding maken met de database\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$pdo \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#F97583\"> new\u003C/span>\u003Cspan style=\"color:#79B8FF\"> \\PDO\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"sqlite:\"\u003C/span>\u003Cspan style=\"color:#F97583\"> .\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"db/sqlite.db\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Nieuwe TODO aanmaken\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#79B8FF\">isset\u003C/span>\u003Cspan style=\"color:#E1E4E8\">($_POST[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'submit'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">])) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    $description \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $_POST[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'description'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    $sth \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $pdo\u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003Cspan style=\"color:#B392F0\">prepare\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#F97583\">INSERT INTO\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> todos (\u003C/span>\u003Cspan style=\"color:#F97583\">description\u003C/span>\u003Cspan style=\"color:#9ECBFF\">) \u003C/span>\u003Cspan style=\"color:#F97583\">VALUES\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> (:\u003C/span>\u003Cspan style=\"color:#F97583\">description\u003C/span>\u003Cspan style=\"color:#9ECBFF\">)\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    $sth\u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003Cspan style=\"color:#B392F0\">bindValue\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">':description'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, $description, \u003C/span>\u003Cspan style=\"color:#79B8FF\">PDO\u003C/span>\u003Cspan style=\"color:#F97583\">::\u003C/span>\u003Cspan style=\"color:#79B8FF\">PARAM_STR\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    $sth\u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003Cspan style=\"color:#B392F0\">execute\u003C/span>\u003Cspan style=\"color:#E1E4E8\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// TODO verwijderen\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">elseif\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#79B8FF\">isset\u003C/span>\u003Cspan style=\"color:#E1E4E8\">($_POST[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'delete'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">])) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    $id \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $_POST[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'id'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    $sth \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $pdo\u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003Cspan style=\"color:#B392F0\">prepare\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#F97583\">DELETE\u003C/span>\u003Cspan style=\"color:#F97583\"> FROM\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> todos \u003C/span>\u003Cspan style=\"color:#F97583\">WHERE\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> id \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> :id\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    $sth\u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003Cspan style=\"color:#B392F0\">bindValue\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">':id'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, $id, \u003C/span>\u003Cspan style=\"color:#79B8FF\">PDO\u003C/span>\u003Cspan style=\"color:#F97583\">::\u003C/span>\u003Cspan style=\"color:#79B8FF\">PARAM_INT\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    $sth\u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003Cspan style=\"color:#B392F0\">execute\u003C/span>\u003Cspan style=\"color:#E1E4E8\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// TODO markeren als compleet\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">elseif\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#79B8FF\">isset\u003C/span>\u003Cspan style=\"color:#E1E4E8\">($_POST[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'complete'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">])) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    $id \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $_POST[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'id'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    $sth \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $pdo\u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003Cspan style=\"color:#B392F0\">prepare\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#F97583\">UPDATE\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> todos \u003C/span>\u003Cspan style=\"color:#F97583\">SET\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> complete \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#F97583\"> WHERE\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> id \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> :id\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    $sth\u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003Cspan style=\"color:#B392F0\">bindValue\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">':id'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, $id, \u003C/span>\u003Cspan style=\"color:#79B8FF\">PDO\u003C/span>\u003Cspan style=\"color:#F97583\">::\u003C/span>\u003Cspan style=\"color:#79B8FF\">PARAM_INT\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    $sth\u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003Cspan style=\"color:#B392F0\">execute\u003C/span>\u003Cspan style=\"color:#E1E4E8\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">?>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">&#x3C;!\u003C/span>\u003Cspan style=\"color:#79B8FF\">DOCTYPE\u003C/span>\u003Cspan style=\"color:#79B8FF\"> html\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">&#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">html\u003C/span>\u003Cspan style=\"color:#79B8FF\"> lang\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"en\"\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">&#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">head\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">meta\u003C/span>\u003Cspan style=\"color:#79B8FF\"> charset\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"UTF-8\"\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">title\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003Cspan style=\"color:#79B8FF\">Todo\u003C/span>\u003Cspan style=\"color:#79B8FF\"> List\u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">title\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">head\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">&#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">body\u003C/span>\u003Cspan style=\"color:#F97583\"> class=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"container\"\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">h1\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003Cspan style=\"color:#79B8FF\">Todo\u003C/span>\u003Cspan style=\"color:#79B8FF\"> List\u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">h1\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">form\u003C/span>\u003Cspan style=\"color:#79B8FF\"> method\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"post\"\u003C/span>\u003Cspan style=\"color:#79B8FF\"> action\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\"\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">input\u003C/span>\u003Cspan style=\"color:#79B8FF\"> type\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"text\"\u003C/span>\u003Cspan style=\"color:#79B8FF\"> name\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"description\"\u003C/span>\u003Cspan style=\"color:#79B8FF\"> value\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\"\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">input\u003C/span>\u003Cspan style=\"color:#79B8FF\"> type\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"submit\"\u003C/span>\u003Cspan style=\"color:#79B8FF\"> name\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"submit\"\u003C/span>\u003Cspan style=\"color:#79B8FF\"> value\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Add\"\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    &#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">form\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">h2\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003Cspan style=\"color:#79B8FF\">Current\u003C/span>\u003Cspan style=\"color:#79B8FF\"> Todos\u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">h2\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">table\u003C/span>\u003Cspan style=\"color:#F97583\"> class=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"table table-striped\"\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">thead\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">tr\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">th\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003Cspan style=\"color:#79B8FF\">Task\u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">th\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">th\u003C/span>\u003Cspan style=\"color:#F97583\">>&#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">th\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">th\u003C/span>\u003Cspan style=\"color:#F97583\">>&#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">th\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            &#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">tr\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        &#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">thead\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">tbody\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            &#x3C;?\u003C/span>\u003Cspan style=\"color:#79B8FF\">php\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            $sth \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $pdo\u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003Cspan style=\"color:#B392F0\">prepare\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#F97583\">SELECT\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#F97583\"> FROM\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> todos \u003C/span>\u003Cspan style=\"color:#F97583\">ORDER BY\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> id \u003C/span>\u003Cspan style=\"color:#F97583\">DESC\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            $sth\u003C/span>\u003Cspan style=\"color:#F97583\">->\u003C/span>\u003Cspan style=\"color:#B392F0\">execute\u003C/span>\u003Cspan style=\"color:#E1E4E8\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            foreach\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ($sth \u003C/span>\u003Cspan style=\"color:#F97583\">as\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $row)\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#F97583\"> ?>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">tr\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                    &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">td\u003C/span>\u003Cspan style=\"color:#F97583\">>&#x3C;?=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> htmlspecialchars\u003C/span>\u003Cspan style=\"color:#E1E4E8\">($row[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'description'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]) \u003C/span>\u003Cspan style=\"color:#F97583\">?>&#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">td\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                    &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">td\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                        &#x3C;?\u003C/span>\u003Cspan style=\"color:#79B8FF\">php\u003C/span>\u003Cspan style=\"color:#F97583\"> if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#F97583\">!\u003C/span>\u003Cspan style=\"color:#E1E4E8\">$row[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'complete'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">])\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#F97583\"> ?>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                            &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">form\u003C/span>\u003Cspan style=\"color:#79B8FF\"> method\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"POST\"\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                                &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">button\u003C/span>\u003Cspan style=\"color:#79B8FF\"> type\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"submit\"\u003C/span>\u003Cspan style=\"color:#79B8FF\"> name\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"complete\"\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003Cspan style=\"color:#79B8FF\">Complete\u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">button\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                                &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">input\u003C/span>\u003Cspan style=\"color:#79B8FF\"> type\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"hidden\"\u003C/span>\u003Cspan style=\"color:#79B8FF\"> name\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"id\"\u003C/span>\u003Cspan style=\"color:#79B8FF\"> value\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"&#x3C;?= \u003C/span>\u003Cspan style=\"color:#E1E4E8\">$row\u003C/span>\u003Cspan style=\"color:#9ECBFF\">['id'] ?>\"\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                                &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">input\u003C/span>\u003Cspan style=\"color:#79B8FF\"> type\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"hidden\"\u003C/span>\u003Cspan style=\"color:#79B8FF\"> name\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"complete\"\u003C/span>\u003Cspan style=\"color:#79B8FF\"> value\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"true\"\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                            &#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">form\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                        &#x3C;?\u003C/span>\u003Cspan style=\"color:#79B8FF\">php\u003C/span>\u003Cspan style=\"color:#F97583\"> else:\u003C/span>\u003Cspan style=\"color:#F97583\"> ?>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">                            Task\u003C/span>\u003Cspan style=\"color:#79B8FF\"> Complete\u003C/span>\u003Cspan style=\"color:#F97583\">!\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                        &#x3C;?\u003C/span>\u003Cspan style=\"color:#79B8FF\">php\u003C/span>\u003Cspan style=\"color:#F97583\"> endif\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; \u003C/span>\u003Cspan style=\"color:#F97583\">?>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                    &#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">td\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                    &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">td\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                        &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">form\u003C/span>\u003Cspan style=\"color:#79B8FF\"> method\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"POST\"\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                            &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">button\u003C/span>\u003Cspan style=\"color:#79B8FF\"> type\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"submit\"\u003C/span>\u003Cspan style=\"color:#79B8FF\"> name\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"delete\"\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003Cspan style=\"color:#79B8FF\">Delete\u003C/span>\u003Cspan style=\"color:#F97583\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">button\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                            &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">input\u003C/span>\u003Cspan style=\"color:#79B8FF\"> type\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"hidden\"\u003C/span>\u003Cspan style=\"color:#79B8FF\"> name\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"id\"\u003C/span>\u003Cspan style=\"color:#79B8FF\"> value\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"&#x3C;?= \u003C/span>\u003Cspan style=\"color:#E1E4E8\">$row\u003C/span>\u003Cspan style=\"color:#9ECBFF\">['id'] ?>\"\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                            &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">input\u003C/span>\u003Cspan style=\"color:#79B8FF\"> type\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"hidden\"\u003C/span>\u003Cspan style=\"color:#79B8FF\"> name\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"delete\"\u003C/span>\u003Cspan style=\"color:#79B8FF\"> value\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"true\"\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                        &#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">form\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                    &#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">td\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                &#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">tr\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            &#x3C;?\u003C/span>\u003Cspan style=\"color:#79B8FF\">php\u003C/span>\u003Cspan style=\"color:#F97583\"> endforeach\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; \u003C/span>\u003Cspan style=\"color:#F97583\">?>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        &#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">tbody\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    &#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">table\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">body\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">html\u003C/span>\u003Cspan style=\"color:#F97583\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch1 id=\"php-strings--variables\">PHP strings &#x26; variables\u003C/h1>\n\u003Cul>\n\u003Cli>String: woorden of stukken tekst die door de computer worden gezien als een item. Een string is een reeks karakters, tussen \u003Ccode>\"quotation marks\"\u003C/code>.\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">&#x3C;?\u003C/span>\u003Cspan style=\"color:#79B8FF\">php\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Hello World!\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Het is belangrijk om duidelijk te maken wat een string is en wat niet in een PHP program. Elk deel van de code is tekst, maar de strings zijn data - deze moeten niet uitgevoerd worden door de computer.\u003C/p>\n\u003Ch2 id=\"escape-sequences\">Escape Sequences\u003C/h2>\n\u003Cp>Aan het begin en eind van een string gebruiken we aanhalingstekens. Deze laten de computer weten dat alles daar tussen een stukje data is.\u003C/p>\n\u003Cp>Als je binnen die string iets tussen aanhalingstekens zet, herkent PHP dit niet en krijg je een syntax error.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"She said \"\u003C/span>\u003Cspan style=\"color:#79B8FF\">hi\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\" to the dog.\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; \u003C/span>\u003Cspan style=\"color:#6A737D\">//syntax error, unexpected 'hi' (T_STRING)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Dit kan je oplossen door \u003Ccode>\\\u003C/code> backslashes om het deel van de string te zetten met de aanhalingstekens. Dit noem je een \u003Cem>escape sequence\u003C/em>.\u003C/p>\n\u003Cp>Bij het printen van meerdere strings heb je ook een escape sequence nodig:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"1. Go to gym\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"2. Cook dinner\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">/* output:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">1. Go to gym2. Cook dinner\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">*/\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Hier kun je \u003Ccode>\\n\u003C/code> er voor zetten, om aan te geven dat het op een nieuwe regel moet staan:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"1. Go to gym\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">2. Cook dinner\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">1.\u003C/span>\u003Cspan style=\"color:#79B8FF\"> Go\u003C/span>\u003Cspan style=\"color:#79B8FF\"> to\u003C/span>\u003Cspan style=\"color:#79B8FF\"> gym\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">2.\u003C/span>\u003Cspan style=\"color:#79B8FF\"> Cook\u003C/span>\u003Cspan style=\"color:#79B8FF\"> dinner\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">*/\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"1. Teach PHP\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">2. Something else\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">3. Learn to have \u003C/span>\u003Cspan style=\"color:#79B8FF\">\\\"\u003C/span>\u003Cspan style=\"color:#9ECBFF\">fun\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\\"\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"string-concatenation\">String Concatenation\u003C/h2>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Code\"\u003C/span>\u003Cspan style=\"color:#F97583\"> .\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"cademy\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">My name is:\"\u003C/span>\u003Cspan style=\"color:#F97583\"> .\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \" \"\u003C/span>\u003Cspan style=\"color:#F97583\"> .\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Lisa\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#F97583\"> .\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"tur\"\u003C/span>\u003Cspan style=\"color:#F97583\"> .\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"duck\"\u003C/span>\u003Cspan style=\"color:#F97583\"> .\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"en\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"variables\">Variables\u003C/h2>\n\u003Cp>In PHP gebruik je het \u003Ccode>$\u003C/code> teken om een variabele te definiëren. Variable names kunnen nummers, letters en underscores (\u003Ccode>_\u003C/code>) bevatten, maar moeten altijd beginnen met een letter of underscore. De variable names zijn case sensitive, dus \u003Ccode>$my_example\u003C/code> en \u003Ccode>$My_example\u003C/code> worden als twee verschillende variables gezien.\u003C/p>\n\u003Cp>Een veel gebruikte conventie bij benaming is het gebruik van een underscore tussen twee woorden, oftewel \u003Ccode>snake_case\u003C/code>.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$name \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Lisa\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$language \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"php\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"I am\"\u003C/span>\u003Cspan style=\"color:#F97583\"> .\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $name;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#F97583\"> .\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $language\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"variable-parsing\">Variable parsing\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$dog_name \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Tadpole\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$favorite_food \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"salmon\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$color \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"brown\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"I have a \u003C/span>\u003Cspan style=\"color:#E1E4E8\">$color\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> dog named \u003C/span>\u003Cspan style=\"color:#E1E4E8\">$dog_name\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> and her favorite food is \u003C/span>\u003Cspan style=\"color:#E1E4E8\">$favorite_food\u003C/span>\u003Cspan style=\"color:#9ECBFF\">.\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Prints: I have a brown dog named Tadpole and her favorite food is salmon.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"curly-braces\">curly braces\u003C/h4>\n\u003Cp>Dit voorbeeld geeft een error, omdat \u003Ccode>toys\u003C/code> niet bestaat.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$toy \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"frisbee\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Alex likes playing with \u003C/span>\u003Cspan style=\"color:#E1E4E8\">$toys\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Als je achter de variable iets wilt zetten, kan je de variabele in curly braces wrappen – \u003Ccode>${variable}\u003C/code>. Alles wat er dan direct achter staat word er aan geplakt.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$dog_name \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Tadpole\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$favorite_food \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"treat\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$color \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"brown\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"I have a \u003C/span>\u003Cspan style=\"color:#E1E4E8\">${color}\u003C/span>\u003Cspan style=\"color:#9ECBFF\">ish dog named \u003C/span>\u003Cspan style=\"color:#E1E4E8\">$dog_name\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> and her favorite food is \u003C/span>\u003Cspan style=\"color:#E1E4E8\">${favorite_food}\u003C/span>\u003Cspan style=\"color:#9ECBFF\">s.\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Prints: I have a brownish dog named Tadpole and her favorite food is treats.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"concatenating-assignment-operator\">Concatenating Assignment Operator\u003C/h2>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$sentence \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">I'm going on a picnic, and I'm taking apples\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$sentence \u003C/span>\u003Cspan style=\"color:#F97583\">.=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \", but also milk\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$sentence \u003C/span>\u003Cspan style=\"color:#F97583\">.=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \", cant do nuts though\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $sentence;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Prints: I'm going on a picnic, and I'm taking apples, but also milk, cant do nuts though\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"assign-by-reference\">Assign by Reference\u003C/h2>\n\u003Cp>Wanneer we een variabele toewijzen aan een andere variabele, reserveert de computer een nieuw stukje geheugen dat wordt gekoppeld aan de linkeroperand, en slaat daar een kopie op van de waarde van de rechteroperand.\u003C/p>\n\u003Cp>De nieuwe variabele is een kopie van de waarde van de originele variabele, maar het is een onafhankelijke variabele; verandering bij de een heeft geen invloed op de ander.\u003C/p>\n\u003Cp>\u003Cstrong>Voorbeeld:\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$first_player_rank \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Beginner\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$second_player_rank \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $first_player_rank;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $second_player_rank; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: Beginner\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$first_player_rank \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Intermediate\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Reassign the value of $first_player_rank\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $second_player_rank; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Still Prints: Beginner\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Je kan ook een alias maken, een bijnaam. In plaats van een kopie van de originele variabele waarde, maken we een nieuwe naam die naar de zelfde plek in het geheugen verwijst. Hier word een andere operator voor gebruikt, de reference assignment oeprator – \u003Ccode>=&#x26;\u003C/code>.\u003C/p>\n\u003Cp>Als we “assign by reference” gebruiken, zeggen we dat de variabele aan de linker kant van de operator verwijzen naar exact dezelfde data als de variabele rechts. Met assignment by reference, veranderingen aan de ene variabele hebben wel invloed op de ander.\u003C/p>\n\u003Cp>\u003Cstrong>Voorbeeld:\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$first_player_rank \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Beginner\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$second_player_rank \u003C/span>\u003Cspan style=\"color:#F97583\">=&#x26;\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $first_player_rank;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $second_player_rank; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: Beginner\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$first_player_rank \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Intermediate\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Reassign the value of $first_player_rank\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $second_player_rank; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: Intermediate\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Cstrong>Voorbeeld assign by reference:\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">/* Imagine a lot of code here */\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$very_bad_unclear_name \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"15 chicken wings\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$order \u003C/span>\u003Cspan style=\"color:#F97583\">=&#x26;\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $very_bad_unclear_name;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$order \u003C/span>\u003Cspan style=\"color:#F97583\">.=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \", 3 nuggets\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">Your order is: \u003C/span>\u003Cspan style=\"color:#E1E4E8\">$very_bad_unclear_name\u003C/span>\u003Cspan style=\"color:#9ECBFF\">.\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Your order is: 15 chicken wings, 3 nuggets.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$name \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Tadpole\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$title \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \", Princess of Dogulon\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$name \u003C/span>\u003Cspan style=\"color:#F97583\">.=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $title;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $name;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Chr>\n\u003Ch1 id=\"numbers\">Numbers\u003C/h1>\n\u003Cp>PHP heeft twee nummer data types. De \u003Ccode>integer\u003C/code> data type is een heel positief of negatief nummers (3, 4500, -98, 0). De \u003Ccode>floating point\u003C/code> data type is decimale nummers (4.1, 2.999, -9.2, -1827.98)\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$my_int \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 78\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$my_float \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 89.9\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $my_int; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: 78\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; \u003C/span>\u003Cspan style=\"color:#6A737D\">// new line\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $my_float; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints 89.9\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Er zijn ook verschillende operators die we kunnen gebruiken.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 5\u003C/span>\u003Cspan style=\"color:#F97583\"> +\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: 6\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 6.6\u003C/span>\u003Cspan style=\"color:#F97583\"> +\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1.2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: 7.8\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 198263\u003C/span>\u003Cspan style=\"color:#F97583\"> -\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 263\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;  \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: 198000\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#F97583\"> -\u003C/span>\u003Cspan style=\"color:#79B8FF\">22.8\u003C/span>\u003Cspan style=\"color:#F97583\"> -\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 19.1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: -41.9\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Op deze manier kunnen we ook rekenen met variabelen:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$tadpole_age \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 7\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$lily_age \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 6\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$age_difference \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $tadpole_age \u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $lily_age;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $age_difference; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints 1\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>En ook delen en keer\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$num_languages \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 4\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$months \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 11\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$days \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $months \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 16\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$days_per_language \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $days \u003C/span>\u003Cspan style=\"color:#F97583\">/\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $num_languages;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $days_per_language;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Maar ook een exponentiation operatotr – \u003Ccode>**\u003C/code>.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 4\u003C/span>\u003Cspan style=\"color:#F97583\"> **\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: 16`\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Dit kan op floats en negatieve nummers ook gebruikt worden\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 2.89\u003C/span>\u003Cspan style=\"color:#F97583\"> **\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 3.2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;  \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: 29.845104015297\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 10\u003C/span>\u003Cspan style=\"color:#F97583\"> **\u003C/span>\u003Cspan style=\"color:#F97583\"> -\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: 0.1\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>En de modula operator – \u003Ccode>%\u003C/code>. Deze operator returns de remainder, het overblijfsel van de linker operand gedeeld door de rechter operand.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 7\u003C/span>\u003Cspan style=\"color:#F97583\"> %\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: 1\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Je kan ook bepaalde sommen tussen haakjes zetten.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 94\u003C/span>\u003Cspan style=\"color:#F97583\"> -\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 4.25\u003C/span>\u003Cspan style=\"color:#F97583\"> +\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 7\u003C/span>\u003Cspan style=\"color:#F97583\"> -\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#79B8FF\">23.50\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1.2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#79B8FF\">20\u003C/span>\u003Cspan style=\"color:#F97583\"> /\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 4\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>De volgorde van de operations word zo bepaald:\u003C/p>\n\u003Col>\n\u003Cli>Any operation wrapped in parentheses (\u003Ccode>()\u003C/code>)\u003C/li>\n\u003Cli>Exponents (\u003Ccode>**\u003C/code>)\u003C/li>\n\u003Cli>Multiplication (\u003Ccode>*\u003C/code>) and division (\u003Ccode>/\u003C/code>)\u003C/li>\n\u003Cli>Addition (\u003Ccode>+\u003C/code>) and subtraction (\u003Ccode>-\u003C/code>).\u003C/li>\n\u003C/ol>\n\u003Cp>The acronym PEMDAS can be helpful for remembering the order of precedence for these arithmetic operations.\u003C/p>\n\u003Ch3 id=\"tabel\">Tabel\u003C/h3>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>\u003Cstrong>Operation\u003C/strong>\u003C/th>\u003Cth>\u003Cstrong>Symbol\u003C/strong>\u003C/th>\u003Cth>\u003Cstrong>Example\u003C/strong>\u003C/th>\u003Cth>\u003Cstrong>Output\u003C/strong>\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>Addition\u003C/td>\u003Ctd>\u003Ccode>+\u003C/code>\u003C/td>\u003Ctd>\u003Ccode>echo 1 + 4.5;\u003C/code>\u003C/td>\u003Ctd>5.5\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Subtraction\u003C/td>\u003Ctd>\u003Ccode>-\u003C/code>\u003C/td>\u003Ctd>\u003Ccode>echo 9 - 1;\u003C/code>\u003C/td>\u003Ctd>8\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Multiplication\u003C/td>\u003Ctd>\u003Ccode>*\u003C/code>\u003C/td>\u003Ctd>\u003Ccode>echo -1.9 * 2.9;\u003C/code>\u003C/td>\u003Ctd>-5.51\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Division\u003C/td>\u003Ctd>\u003Ccode>/\u003C/code>\u003C/td>\u003Ctd>\u003Ccode>echo 9 / 1;\u003C/code>\u003C/td>\u003Ctd>9\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Modulo\u003C/td>\u003Ctd>\u003Ccode>%\u003C/code>\u003C/td>\u003Ctd>\u003Ccode>echo 11 % 3;\u003C/code>\u003C/td>\u003Ctd>2\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Exponentiation\u003C/td>\u003Ctd>\u003Ccode>**\u003C/code>\u003C/td>\u003Ctd>\u003Ccode>echo 8 ** 2;\u003C/code>\u003C/td>\u003Ctd>64\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Ch2 id=\"mathematical-assignment-operators\">Mathematical Assignment Operators\u003C/h2>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$savings \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 800\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$bike_cost \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 75\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$savings \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $savings \u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $bike_cost;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $savings; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: 725\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// kan korter! MAND --->\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$savings \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 800\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$bike_cost \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 75\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$savings \u003C/span>\u003Cspan style=\"color:#F97583\">-=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $bike_cost;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $savings; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: 725\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>PHP heeft ook \u003Ccode>increment operators\u003C/code>:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$age \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 89\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$age\u003C/span>\u003Cspan style=\"color:#F97583\">++\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $age; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: 90\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$days_til_vacation \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 7\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$days_til_vacation\u003C/span>\u003Cspan style=\"color:#F97583\">--\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $days_til_vacation; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: 6\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"tabel-overzicht-operators\">Tabel Overzicht Operators\u003C/h3>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>\u003Cstrong>Operation:\u003C/strong>\u003C/th>\u003Cth>\u003Cstrong>Long Syntax:\u003C/strong>\u003C/th>\u003Cth>\u003Cstrong>Short Syntax:\u003C/strong>\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>Add\u003C/td>\u003Ctd>$x = $x + $y\u003C/td>\u003Ctd>$x += $y\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Subtract\u003C/td>\u003Ctd>$x = $x - $y\u003C/td>\u003Ctd>$x -= $y\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Multiply\u003C/td>\u003Ctd>$x = $x * $y\u003C/td>\u003Ctd>$x *= $y\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Divide\u003C/td>\u003Ctd>$x = $x / $y\u003C/td>\u003Ctd>$x /= $y\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>Modulo\u003C/td>\u003Ctd>$x = $x % $y\u003C/td>\u003Ctd>$x %= $y\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Chr>\n\u003Ch1 id=\"php-functions\">PHP Functions\u003C/h1>\n\u003Cp>Bronnen bij dit deel:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.codecademy.com/resources/docs/php/functions\">PHP functions\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.codecademy.com/learn/learn-php-functions/modules/introduction-to-functions-in-php/cheatsheet\">Introduction to functions - cheatsheet\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"introduction-to-functions\">Introduction to Functions\u003C/h2>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> greetLearner\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  echo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Hello, Learner!\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  echo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"I hope you're enjoying PHP!\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  echo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Love, Codecademy\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// invoke function:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">greetLearner\u003C/span>\u003Cspan style=\"color:#E1E4E8\">();\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> printStringReturnNumber\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  echo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"ERROR: Page not found!\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 404\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$my_num \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> printStringReturnNumber\u003C/span>\u003Cspan style=\"color:#E1E4E8\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $my_num;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// prints:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// ERROR: Page not found!\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// 404\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> first\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"You did it!\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> second\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"You're amazing!\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> third\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"You're a coding hero!\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#B392F0\"> first\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() \u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \" \"\u003C/span>\u003Cspan style=\"color:#F97583\"> .\u003C/span>\u003Cspan style=\"color:#B392F0\"> second\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() \u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \" \"\u003C/span>\u003Cspan style=\"color:#F97583\"> .\u003C/span>\u003Cspan style=\"color:#B392F0\"> third\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() ;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> sayCustomHello\u003C/span>\u003Cspan style=\"color:#E1E4E8\">($name)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Hello, \u003C/span>\u003Cspan style=\"color:#E1E4E8\">$name\u003C/span>\u003Cspan style=\"color:#9ECBFF\">!\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">sayCustomHello\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Aisle Nevertell\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">); \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: Hello, Aisle Nevertell!\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">sayCustomHello\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Codecademy learner\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">); \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: Hello, Codecademy Learner!\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\u003C/code>\u003C/pre>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> increaseEnthusiasm\u003C/span>\u003Cspan style=\"color:#E1E4E8\">($val)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $val \u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"!\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> repeatThreeTimes\u003C/span>\u003Cspan style=\"color:#E1E4E8\">($string)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $string \u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $string \u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $string;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#B392F0\"> increaseEnthusiasm\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"henlo\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#B392F0\"> repeatThreeTimes\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"hi\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#B392F0\"> increaseEnthusiasm\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">repeatThreeTimes\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"HI\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">));\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"multiple-parameters\">Multiple Parameters\u003C/h3>\n\u003Cp>We kunnen ook functies met meerdere parameters definiëren.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> divide\u003C/span>\u003Cspan style=\"color:#E1E4E8\">($num_one, $num_two)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $num_one \u003C/span>\u003Cspan style=\"color:#F97583\">/\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $num_two;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#B392F0\"> divide\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">12\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">); \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: 4\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#B392F0\"> divide\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">12\u003C/span>\u003Cspan style=\"color:#E1E4E8\">); \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: 0.25\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>❗️ Een functie met minder argumenten aanroepen dan er verwacht worden geven errors, zoals deze:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> expectTwo\u003C/span>\u003Cspan style=\"color:#E1E4E8\">($first, $second)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"whatever\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#B392F0\"> expectTwo\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"test\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">); \u003C/span>\u003Cspan style=\"color:#6A737D\">// ❌ Will result in an error\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Cstrong>Voorbeeeld:\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> calculateArea\u003C/span>\u003Cspan style=\"color:#E1E4E8\">($one, $two)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $one \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $two;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> calculateVolume\u003C/span>\u003Cspan style=\"color:#E1E4E8\">($one, $two, $three)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $one \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $two \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $three;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#B392F0\"> calculateArea\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">5\u003C/span>\u003Cspan style=\"color:#E1E4E8\">); \u003C/span>\u003Cspan style=\"color:#6A737D\">// 15\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#B392F0\"> calculateVolume\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">5\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">); \u003C/span>\u003Cspan style=\"color:#6A737D\">// 30\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"default-parameters\">Default Parameters\u003C/h3>\n\u003Cp>Je kan errors voorkomen door een default parameters mee te geven aan de functie. Als er dan geen argument word meegegeven als de functie invoked word, word deze gebruikt. Als er wel een argument word meegegeven, word deze overschreven.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> greetFriend\u003C/span>\u003Cspan style=\"color:#E1E4E8\">($name \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"old chum\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  echo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Hello, \u003C/span>\u003Cspan style=\"color:#E1E4E8\">$name\u003C/span>\u003Cspan style=\"color:#9ECBFF\">!\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">greetFriend\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Marvin\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">); \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: Hello, Marvin!\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">greetFriend\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(); \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: Hello, old chum!\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"pass-by-reference\">Pass by Reference\u003C/h3>\n\u003Cp>We kunnen functions met variables aanroepen of met directe waardes. Als we een function invoken met een variable als argument, is het alsof we die waarde toewijzen aan de function’s parameter. We wijzen een kopie van de waarde van de argument variable toe. Het variable argument en de parameter zijn aparte entities; verandering aan de parameter in de functie heeft geen effect op de waarde die gepassed is.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> addX\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ($param)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  $param \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $param \u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"X\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  echo\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $param;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$word \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Hello\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">addX\u003C/span>\u003Cspan style=\"color:#E1E4E8\">($word); \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: HelloX\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $word; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: Hello\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Als we wel permanent een variabele willen veranderen, daan zetten we een \u003Ccode>&#x26;\u003C/code> voor de parameter argument van de functie.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> addXPermanently\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#F97583\">&#x26;\u003C/span>\u003Cspan style=\"color:#E1E4E8\">$param)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  $param \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $param \u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"X\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  echo\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $param;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$word \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Hello\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">addXPermanently\u003C/span>\u003Cspan style=\"color:#E1E4E8\">($word); \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: HelloX\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $word; \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: HelloX\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Cstrong>Voorbeeld\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$string_one \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"you have teeth\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$string_two \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"toads are nice\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$string_three \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"brown is my favorite color\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> convertToQuestion\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#F97583\">&#x26;\u003C/span>\u003Cspan style=\"color:#E1E4E8\">$str) \u003C/span>\u003Cspan style=\"color:#6A737D\">// gebruik van &#x26;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$str \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Do you think \"\u003C/span>\u003Cspan style=\"color:#F97583\"> .\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $str \u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"?\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// redefinieren van string argument\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// in de console de nieuwe string variabele\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#B392F0\"> convertToQuestion\u003C/span>\u003Cspan style=\"color:#E1E4E8\">($string_one);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#B392F0\"> convertToQuestion\u003C/span>\u003Cspan style=\"color:#E1E4E8\">($string_two);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#B392F0\"> convertToQuestion\u003C/span>\u003Cspan style=\"color:#E1E4E8\">($string_three)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"variable-scope\">Variable Scope\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#B392F0\"> calculateDaysLeft\u003C/span>\u003Cspan style=\"color:#E1E4E8\">($feed_quantity, $number, $rate)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  $result \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $feed_quantity \u003C/span>\u003Cspan style=\"color:#F97583\">/\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ($number \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $rate);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> $result;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#B392F0\"> calculateDaysLeft\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">300\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">30\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"introduction-to-built-in-functions\">Introduction to Built-In Functions\u003C/h2>\n\u003Cp>PHP heeft een aantal built-in functions. Deze functies – ook bekend als internal functions – kunnen aangeroepen worden zonder dat wij ze zelf te hoeven schrijven.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"This works!\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"This also works!\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Buuuut!\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\" \"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"This\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\" \"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"does!\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\n\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">//echo(\"This would NOT work\", \"\\n\");\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"werken-met-variables\">Werken met Variables\u003C/h3>\n\u003Cp>PHP heeft een handige built-in function voor het verkrijgen van informatie over de variables, zoals \u003Ccode>gettype()\u003C/code>. Deze functie neemt een argument en returned een string waarde die aangeeft wat voor data type het argument is.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$name \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"Aisle Nevertell\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$age \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1000000\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#79B8FF\"> gettype\u003C/span>\u003Cspan style=\"color:#E1E4E8\">($name); \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: string\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#79B8FF\"> gettype\u003C/span>\u003Cspan style=\"color:#E1E4E8\">($age); \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: integer\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Een andere functie die ook een variabele argument gebruikt is de \u003Ccode>var_dump()\u003C/code> functie. Het print details over het argument dat het krijgt. Het laat zien wat voor soort data type het is, en welke waarde het heeft. Voor een string laat het de lengte hiervan zien.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">var_dump\u003C/span>\u003Cspan style=\"color:#E1E4E8\">($name); \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: string(15) \"Aisle Nevertell\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">var_dump\u003C/span>\u003Cspan style=\"color:#E1E4E8\">($age); \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: int(1000000)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Ccode>strrev()\u003C/code> krijgt een argument, een string, en draait deze om.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#79B8FF\"> strrev\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Hello, World!\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">); \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: !dlroW ,olleH\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Ccode>strtolower()\u003C/code> transformeert de argument string naar alleen kleine letters.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#79B8FF\"> strtolower\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"HeLLo\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">); \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: hello\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Ccode>strrepeat()\u003C/code> neemt een string als eerste argument, en een nummer als het tweede. Het returned een string die de argument string zo vaak herhaald als het argument nummer.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#79B8FF\"> str_repeat\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"hi\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">10\u003C/span>\u003Cspan style=\"color:#E1E4E8\">); \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: hihihihihihihihihihi\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"werken-met-substrings\">Werken met Substrings\u003C/h3>\n\u003Cp>Een substring is een deel van een string. \u003Ccode>substr_count()\u003C/code> is een functie die de hoeveelheid substrings in een string returned. Het neemt twee argumenten; de string die doorzocht word, en de substring die gezocht word — soms ook de \u003Ccode>neelde\u003C/code> genoemd.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"php\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">$story \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"I was like, \u003C/span>\u003Cspan style=\"color:#79B8FF\">\\\"\u003C/span>\u003Cspan style=\"color:#9ECBFF\">Dude, like just tell me what you like think because like everyone else is like being totally honest, and like I just want to know what you like think.\u003C/span>\u003Cspan style=\"color:#79B8FF\">\\\"\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> So like I don't know...\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">echo\u003C/span>\u003Cspan style=\"color:#79B8FF\"> substr_count\u003C/span>\u003Cspan style=\"color:#E1E4E8\">($story, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"like\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">); \u003C/span>\u003Cspan style=\"color:#6A737D\">// Prints: 8\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"bronnen\">Bronnen\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.php.net/manual/en/language.types.string.php\">Officiële PHP docs\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.codecademy.com/resources/docs/php/variables\">Variables - codecademy\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.codecademy.com/resources/docs/php/functions\">PHP functions\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.codecademy.com/learn/learn-php-functions/modules/introduction-to-functions-in-php/cheatsheet\">Introduction to functions - cheatsheet\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":243,"localImagePaths":330,"remoteImagePaths":331,"frontmatter":332,"imagePaths":335},[244,247,249,252,255,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327],{"depth":47,"slug":245,"text":246},"table-of-contents","Table of Contents",{"depth":47,"slug":248,"text":232},"introduction-to-php",{"depth":14,"slug":250,"text":251},"history-of-php","History of PHP",{"depth":14,"slug":253,"text":254},"how-is-php-used-in-html","How is PHP used in HTML?",{"depth":14,"slug":256,"text":257},"how-is-php-executed","How is PHP executed?",{"depth":14,"slug":259,"text":260},"php-comments","PHP comments",{"depth":74,"slug":262,"text":263},"voorbeeld---todo-list","Voorbeeld - Todo list",{"depth":47,"slug":265,"text":266},"php-strings--variables","PHP strings & variables",{"depth":14,"slug":268,"text":269},"escape-sequences","Escape Sequences",{"depth":14,"slug":271,"text":272},"string-concatenation","String Concatenation",{"depth":14,"slug":274,"text":275},"variables","Variables",{"depth":74,"slug":277,"text":278},"variable-parsing","Variable parsing",{"depth":104,"slug":280,"text":281},"curly-braces","curly braces",{"depth":14,"slug":283,"text":284},"concatenating-assignment-operator","Concatenating Assignment Operator",{"depth":14,"slug":286,"text":287},"assign-by-reference","Assign by Reference",{"depth":47,"slug":289,"text":290},"numbers","Numbers",{"depth":74,"slug":292,"text":293},"tabel","Tabel",{"depth":14,"slug":295,"text":296},"mathematical-assignment-operators","Mathematical Assignment Operators",{"depth":74,"slug":298,"text":299},"tabel-overzicht-operators","Tabel Overzicht Operators",{"depth":47,"slug":301,"text":302},"php-functions","PHP Functions",{"depth":14,"slug":304,"text":305},"introduction-to-functions","Introduction to Functions",{"depth":74,"slug":307,"text":308},"multiple-parameters","Multiple Parameters",{"depth":74,"slug":310,"text":311},"default-parameters","Default Parameters",{"depth":74,"slug":313,"text":314},"pass-by-reference","Pass by Reference",{"depth":74,"slug":316,"text":317},"variable-scope","Variable Scope",{"depth":14,"slug":319,"text":320},"introduction-to-built-in-functions","Introduction to Built-In Functions",{"depth":74,"slug":322,"text":323},"werken-met-variables","Werken met Variables",{"depth":74,"slug":325,"text":326},"werken-met-substrings","Werken met Substrings",{"depth":104,"slug":328,"text":329},"bronnen","Bronnen",[],[],{"id":14,"title":232,"pubDate":333,"description":234,"tags":334,"lang":194},["Date","2025-05-14T00:00:00.000Z"],[236,114],[],"emotional-interface",{"id":336,"data":338,"body":346,"filePath":347,"digest":348,"rendered":349},{"id":339,"title":340,"pubDate":341,"description":342,"tags":343,"lang":194},5,"Emotional Interface",["Date","2025-05-23T00:00:00.000Z"],"Kalok Yeung verteld over emotional interface, wat het is en hoe je dit kan bouwen.",[344,345,114],"we love web","design","[Kalok Yeung](https://kalokyeung.com/ \"https://kalokyeung.com/\")\n\n- Freelance Creative Director / Designer\n\n# Emotional Interface\n\nHet stofje wat vrij komt in je lichaam wanneer je geluk ervaart, het is het gelukshormoon. Hoe zorg je dat gebruikers oxytocine krijgen van jouw website?\n\n## How to digitally bond?\n\n### Soft UI\n\n- telepathic, synthezizer: veel ronde vormen, oogt lief,\n- 2: witruimte, subtieler, ronde hoeken, op kleine details ronde hoeken\n- suupaa: speelser, webgl en 3d, ronde hoeken, zachte gradient in de bg,\n\n### Motion\n\ntransities, hover states, animaties, etc. Het moet wat toevoegen aan de experience, niet als decoratie, tenzij het bijdraagt aan de brand. Heeft een motief nodig.\n\n- Seen: speels met soft ui, animaties en transities\n- Owl: UX constructie, hergebruiken van elementen, blijft hangen\n- 3: intro animatie, overgang van ene element naar andere element, vloeiende overgang, soft ui\n- dolly: interessante UX op video player met kleine details, transition delay -> physics\n- 5: subtiel, klein, clean\n\n### Sound\n\nUnderused. Branding\n\n- Seen: kleine geluidjes bij klikken\n- ONE: geluidjes op scroll, verplaatsen van active state in ul/li\n- JazzKeys: geluid op basis van wat je intikt\n- Ezekiel Aquino: piano keys\n\n### Content\n\nBinden door middel van content\n\n- Seen: geen grote lappen tekst, maar als berichten op telefoon, natuurlijke uitwisseling\n- Filter: gepersonaliseerd, conversational interface.\n- Parallel: andere manier van visualiseren,","src/content/blog/emotional-interface.md","f09a07f597537e8d",{"html":350,"metadata":351},"\u003Cp>\u003Ca href=\"https://kalokyeung.com/\" title=\"https://kalokyeung.com/\">Kalok Yeung\u003C/a>\u003C/p>\n\u003Cul>\n\u003Cli>Freelance Creative Director / Designer\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"emotional-interface\">Emotional Interface\u003C/h1>\n\u003Cp>Het stofje wat vrij komt in je lichaam wanneer je geluk ervaart, het is het gelukshormoon. Hoe zorg je dat gebruikers oxytocine krijgen van jouw website?\u003C/p>\n\u003Ch2 id=\"how-to-digitally-bond\">How to digitally bond?\u003C/h2>\n\u003Ch3 id=\"soft-ui\">Soft UI\u003C/h3>\n\u003Cul>\n\u003Cli>telepathic, synthezizer: veel ronde vormen, oogt lief,\u003C/li>\n\u003Cli>2: witruimte, subtieler, ronde hoeken, op kleine details ronde hoeken\u003C/li>\n\u003Cli>suupaa: speelser, webgl en 3d, ronde hoeken, zachte gradient in de bg,\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"motion\">Motion\u003C/h3>\n\u003Cp>transities, hover states, animaties, etc. Het moet wat toevoegen aan de experience, niet als decoratie, tenzij het bijdraagt aan de brand. Heeft een motief nodig.\u003C/p>\n\u003Cul>\n\u003Cli>Seen: speels met soft ui, animaties en transities\u003C/li>\n\u003Cli>Owl: UX constructie, hergebruiken van elementen, blijft hangen\u003C/li>\n\u003Cli>3: intro animatie, overgang van ene element naar andere element, vloeiende overgang, soft ui\u003C/li>\n\u003Cli>dolly: interessante UX op video player met kleine details, transition delay -> physics\u003C/li>\n\u003Cli>5: subtiel, klein, clean\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"sound\">Sound\u003C/h3>\n\u003Cp>Underused. Branding\u003C/p>\n\u003Cul>\n\u003Cli>Seen: kleine geluidjes bij klikken\u003C/li>\n\u003Cli>ONE: geluidjes op scroll, verplaatsen van active state in ul/li\u003C/li>\n\u003Cli>JazzKeys: geluid op basis van wat je intikt\u003C/li>\n\u003Cli>Ezekiel Aquino: piano keys\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"content\">Content\u003C/h3>\n\u003Cp>Binden door middel van content\u003C/p>\n\u003Cul>\n\u003Cli>Seen: geen grote lappen tekst, maar als berichten op telefoon, natuurlijke uitwisseling\u003C/li>\n\u003Cli>Filter: gepersonaliseerd, conversational interface.\u003C/li>\n\u003Cli>Parallel: andere manier van visualiseren,\u003C/li>\n\u003C/ul>",{"headings":352,"localImagePaths":369,"remoteImagePaths":370,"frontmatter":371,"imagePaths":374},[353,354,357,360,363,366],{"depth":47,"slug":336,"text":340},{"depth":14,"slug":355,"text":356},"how-to-digitally-bond","How to digitally bond?",{"depth":74,"slug":358,"text":359},"soft-ui","Soft UI",{"depth":74,"slug":361,"text":362},"motion","Motion",{"depth":74,"slug":364,"text":365},"sound","Sound",{"depth":74,"slug":367,"text":368},"content","Content",[],[],{"id":339,"title":340,"pubDate":372,"description":342,"tags":373,"lang":194},["Date","2025-05-23T00:00:00.000Z"],[344,345,114],[],{"id":117,"data":376,"body":386,"filePath":387,"digest":388,"rendered":389},{"id":377,"title":378,"pubDate":379,"description":380,"image":381,"tags":384,"relatedPosts":385,"lang":30,"note":118},6,"Building a CSS carousel — scroll buttons, markers and anchor positioning",["Date","2025-05-23T00:00:00.000Z"],"CSS Carousels are pretty cool",{"url":382,"alt":383},"/blog-content/css-carousel.png","Screenshot of the carousel on the homepage, in the 'Blog' section.",[112,113,114],[116,101],"CSS Carousels are the new way to create carousels without any JS. In this post I'm exploring how they work, and combining the new scroll markers with anchor positioning and `sibling-index()`.\n\n## Setup\n\nI started out with a simple `ul`, containing `li` element with the blog post preview content.\n\n```html\n\u003Cul class=\"grid\">\n  {allPosts.map((post) => (\n    \u003Cli>\n      \u003Ca href={`/blog/${post.id}`}>\n        \u003Ch3>{post.data.title}\u003C/h3>\n        \u003Cp>{post.data.description}\u003C/p>\n      \u003C/a>\n    \u003C/li>\n  ))}\n\u003C/ul>\n```\n\nI added some CSS to turn it into a simple carousel, with some scroll snapping.\n\n```css\nul.grid {\n  display: flex;\n  flex-direction: row;\n  overflow-x: auto;\n  scroll-snap-type: x mandatory;\n  scroll-behavior: smooth;\n}\n\nli {\n  scroll-snap-align: center;\n  flex-shrink: 0;\n}\n```\n\n## Scroll Buttons\n\nNow that the basic carousel works, we can add the new fun stuff! I started with the scroll buttons. For this I used `ul::scroll-button(*)`. To target the left or right button, replace the `*` with left or right respectively.\n\n```css\nul::scroll-button(*) {\n  background-color: transparent;\n  width: 3rem;\n  height: 3rem;\n  position: absolute;\n  position-anchor: --grid;\n  border: none;\n  transition: 0.15s ease-in-out;\n}\n```\n\nAs you can see, I have also used anchor positioning, to position the scroll buttons, and scroll markers, relative to the grid. On the left and right buttons I positioned them where I wanted them to be.\n\n## Scroll Markers\n\nNow that we have the scroll buttons, we can add the scroll markers. For this I used `ul::scroll-marker-group`.\n\n```css\n&::scroll-marker-group {\n  position: absolute;\n  position-anchor: --grid;\n  top: anchor(--grid bottom);\n  justify-self: anchor-center;\n}\n```\n\nI didn't even know `justify-self: anchor-center` existed, but it did and was exactly what I needed.\n\nTo target the scroll markers themself, you use `li::scroll-marker`. I've added a background image to each, and gave them a \"random\" rotation, based on it's index in the list. To ensure it's clear where we are in the list, I reduced the opacity of the scroll markers, and made the size a bit smaller.\n\n```css\nli::scroll-marker {\n  content: \"\" / \"Scroll to post\";\n  background: url(/public/assets/svg/dot.svg);\n  height: 2rem;\n  width: 2rem;\n  transform: rotate(calc(sibling-index() * 70deg));\n  opacity: 0.65;\n}\n```\n\nFor the scroll marker of the active element, I increased the opacity, and made it a bit bigger.\n\n```css\nli::scroll-marker:target-current {\n  opacity: 1;\n  scale: 1.1;\n}\n```\n\n### Code\n\nYou can find the full code for the CSS carousel [here](https://github.com/lisagjh/lisavanderhoorn.nl/blob/test/src/components/display/Blog.astro) . Have fun!\n\n### Sources\n\n- [Carousels with CSS](https://developer.chrome.com/blog/carousels-with-css)\n- [CSS Carousel Gallery](https://chrome.dev/carousel/)\n\n## Support\n\nThis is a new feature and is only available in Chrome Canary 136+ at this time.","src/content/blog/css-carousels.md","777e851fb6b42260",{"html":390,"metadata":391},"\u003Cp>CSS Carousels are the new way to create carousels without any JS. In this post I’m exploring how they work, and combining the new scroll markers with anchor positioning and \u003Ccode>sibling-index()\u003C/code>.\u003C/p>\n\u003Ch2 id=\"setup\">Setup\u003C/h2>\n\u003Cp>I started out with a simple \u003Ccode>ul\u003C/code>, containing \u003Ccode>li\u003C/code> element with the blog post preview content.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"html\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">ul\u003C/span>\u003Cspan style=\"color:#B392F0\"> class\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"grid\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  {allPosts.map((post) => (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">li\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">a\u003C/span>\u003Cspan style=\"color:#B392F0\"> href\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">{\u003C/span>\u003Cspan style=\"color:#B392F0\">`\u003C/span>\u003Cspan style=\"color:#FDAEB7;font-style:italic\">/blog/${post.id}`}\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">h3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>{post.data.title}&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">h3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">p\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>{post.data.description}&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">p\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">a\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">li\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  ))}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">ul\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>I added some CSS to turn it into a simple carousel, with some scroll snapping.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"css\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">ul\u003C/span>\u003Cspan style=\"color:#B392F0\">.grid\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  display\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">flex\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  flex-direction\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">row\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  overflow-x\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">auto\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  scroll-snap-type\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">x\u003C/span>\u003Cspan style=\"color:#79B8FF\"> mandatory\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  scroll-behavior\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">smooth\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">li\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  scroll-snap-align\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">center\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  flex-shrink\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"scroll-buttons\">Scroll Buttons\u003C/h2>\n\u003Cp>Now that the basic carousel works, we can add the new fun stuff! I started with the scroll buttons. For this I used \u003Ccode>ul::scroll-button(*)\u003C/code>. To target the left or right button, replace the \u003Ccode>*\u003C/code> with left or right respectively.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"css\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">ul\u003C/span>\u003Cspan style=\"color:#E1E4E8\">::scroll-button(\u003C/span>\u003Cspan style=\"color:#85E89D\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  background-color\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">transparent\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  width\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#F97583\">rem\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  height\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#F97583\">rem\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  position\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">absolute\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  position-anchor\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: --grid;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  border\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">none\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  transition\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0.15\u003C/span>\u003Cspan style=\"color:#F97583\">s\u003C/span>\u003Cspan style=\"color:#79B8FF\"> ease-in-out\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>As you can see, I have also used anchor positioning, to position the scroll buttons, and scroll markers, relative to the grid. On the left and right buttons I positioned them where I wanted them to be.\u003C/p>\n\u003Ch2 id=\"scroll-markers\">Scroll Markers\u003C/h2>\n\u003Cp>Now that we have the scroll buttons, we can add the scroll markers. For this I used \u003Ccode>ul::scroll-marker-group\u003C/code>.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"css\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x26;::\u003C/span>\u003Cspan style=\"color:#85E89D\">scroll-marker-group\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  position\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">absolute\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  position-anchor\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: --grid;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  top\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: anchor(--grid \u003C/span>\u003Cspan style=\"color:#79B8FF\">bottom\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  justify-self\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: anchor-center;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>I didn’t even know \u003Ccode>justify-self: anchor-center\u003C/code> existed, but it did and was exactly what I needed.\u003C/p>\n\u003Cp>To target the scroll markers themself, you use \u003Ccode>li::scroll-marker\u003C/code>. I’ve added a background image to each, and gave them a “random” rotation, based on it’s index in the list. To ensure it’s clear where we are in the list, I reduced the opacity of the scroll markers, and made the size a bit smaller.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"css\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">li\u003C/span>\u003Cspan style=\"color:#E1E4E8\">::\u003C/span>\u003Cspan style=\"color:#85E89D\">scroll-marker\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  content\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> / \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Scroll to post\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  background\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">url\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">/public/assets/svg/dot.svg\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  height\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003Cspan style=\"color:#F97583\">rem\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  width\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003Cspan style=\"color:#F97583\">rem\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  transform\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">rotate\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">calc\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(sibling-index() * \u003C/span>\u003Cspan style=\"color:#79B8FF\">70\u003C/span>\u003Cspan style=\"color:#F97583\">deg\u003C/span>\u003Cspan style=\"color:#E1E4E8\">));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  opacity\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">0.65\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>For the scroll marker of the active element, I increased the opacity, and made it a bit bigger.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"css\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">li\u003C/span>\u003Cspan style=\"color:#E1E4E8\">::\u003C/span>\u003Cspan style=\"color:#85E89D\">scroll-marker\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003Cspan style=\"color:#85E89D\">target-current\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  opacity\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  scale\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">1.1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"code\">Code\u003C/h3>\n\u003Cp>You can find the full code for the CSS carousel \u003Ca href=\"https://github.com/lisagjh/lisavanderhoorn.nl/blob/test/src/components/display/Blog.astro\">here\u003C/a> . Have fun!\u003C/p>\n\u003Ch3 id=\"sources\">Sources\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://developer.chrome.com/blog/carousels-with-css\">Carousels with CSS\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://chrome.dev/carousel/\">CSS Carousel Gallery\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"support\">Support\u003C/h2>\n\u003Cp>This is a new feature and is only available in Chrome Canary 136+ at this time.\u003C/p>",{"headings":392,"localImagePaths":407,"remoteImagePaths":408,"frontmatter":409,"imagePaths":414},[393,396,399,402,405,406],{"depth":14,"slug":394,"text":395},"setup","Setup",{"depth":14,"slug":397,"text":398},"scroll-buttons","Scroll Buttons",{"depth":14,"slug":400,"text":401},"scroll-markers","Scroll Markers",{"depth":74,"slug":403,"text":404},"code","Code",{"depth":74,"slug":172,"text":173},{"depth":14,"slug":139,"text":140},[],[],{"id":377,"title":378,"pubDate":410,"description":380,"image":411,"tags":412,"lang":30,"note":118,"relatedPosts":413},["Date","2025-05-23T00:00:00.000Z"],{"url":382,"alt":383},[112,113,114],[116,101],[]]